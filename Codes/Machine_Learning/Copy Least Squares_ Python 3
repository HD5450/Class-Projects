{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy Least Squares: Python 3","version":"0.3.2","provenance":[{"file_id":"115IkGZZWFdLhOzeEYc2ezO8FLrtsjmco","timestamp":1551334722533}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"Z7KpD0zo62Nn","colab_type":"code","outputId":"d116432f-909d-4fb5-effc-ae959ce68a7e","executionInfo":{"status":"ok","timestamp":1551385472236,"user_tz":300,"elapsed":17331,"user":{"displayName":"Mountain Chan","photoUrl":"","userId":"06751548981326338197"}},"colab":{"base_uri":"https://localhost:8080/","height":122}},"cell_type":"code","source":["#!/usr/bin/python\n","# -*- coding: utf-8 -*-\n","##############################\n","# author: Saran Ahluwalia\n","# contact: ssahluwa@ncsu.edu\n","# date: 2019-02-23\n","##############################\n","import sys\n","import time\n","import datetime\n","import os\n","import math\n","import numpy as np\n","import matplotlib as mpl\n","from matplotlib import pyplot as plt\n","from matplotlib import rc\n","from matplotlib.pyplot import legend\n","\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')\n","\n","def ensure_dir(dir):\n","    if not os.path.exists(dir):\n","        os.makedirs(dir)\n","\n","now = datetime.datetime.now()\n","now = \"%s-%s-%s\" %(now.year, str(now.month).zfill(2), str(now.day).zfill(2))\n","\n","BASEDIR = os.path.dirname(os.path.abspath('__file__'))\n","RAWDIR = os.path.join(BASEDIR, 'raw')\n","OUTDIR = os.path.join(BASEDIR, 'out')\n","    \n","def polyLeastSquares(m, X):\n","    '''\n","    polynomial least squares curve fitting\n","    m = degree of the fitting polynomial\n","    \n","    X = array which contains the data points\n","    and is of shape (nDatapoints, 2)\n","    \n","    returns the fitted weights vector, which is of shape\n","    (m + 1,)\n","    \n","    Usage:\n","    m = 9\n","    w = polyLeastSquares(m, Xt) # Xt = training data\n","    # returns the weight vector w\n","    '''\n","    nDatapoints = X.shape[0]\n","    assert X.shape[1] == 2, \"Error: Shape assertion failed.\"\n","    \n","    # fill the Vandermonde matrix V\n","    V = np.ones((nDatapoints, m + 1))\n","    \n","    # column vector\n","    tmp = np.ones((nDatapoints,))\n","    \n","    for i in range(m):\n","        tmp = np.multiply(tmp, X[:, 0])\n","        V[:, i + 1] = tmp\n","    \n","    # fill the right hand side\n","    b = np.ones((nDatapoints, 1))\n","    b[:, 0] = X[:, 1]\n","    \n","    A = np.matmul(V.transpose(), V)\n","    b = np.matmul(V.transpose(), b)\n","        \n","    # solve linear system A * w = b for the weights vector w\n","    w = np.linalg.solve(A, b)\n","    w = w.reshape((m + 1,))\n","    \n","    return w\n","    \n","def polyLeastSquaresReg(m, X, mu):\n","    '''\n","    polynomial least squares curve fitting\n","    m = degree of the fitting polynomial\n","    \n","    X = array which contains the data points\n","    and is of shape (nDatapoints, 2)\n","    \n","    mu = is the regularization strength parameter.\n","    I would have liked to use lambda for the regularization strength. But since lambda\n","    is a reserved keyword in python I chose to use mu instead.\n","    This function implements quadratic regularization.\n","    \n","    returns the fitted weights vector, which is of shape\n","    (m + 1,)\n","    \n","    Usage:\n","    m = 9\n","    regLambda = 0.001\n","    w = polyLeastSquaresReg(m, Xt, regLambda) # Xt = training data\n","    # returns the weight vector w\n","    '''\n","    nDatapoints = X.shape[0]\n","    assert X.shape[1] == 2, \"Error: Shape assertion failed.\"\n","    \n","    # fill the Vandermonde matrix V\n","    V = np.ones((nDatapoints, m + 1))\n","    \n","    # column vector\n","    tmp = np.ones((nDatapoints,))\n","    \n","    for i in range(m):\n","        tmp = np.multiply(tmp, X[:, 0])\n","        V[:, i + 1] = tmp\n","    \n","    # fill the right hand side\n","    b = np.ones((nDatapoints, 1))\n","    b[:, 0] = X[:, 1]\n","    \n","    A = np.matmul(V.transpose(), V)\n","    b = np.matmul(V.transpose(), b)\n","    \n","    # add mu * Id to account for quadratic regularization\n","    A += mu * np.eye(m + 1)\n","        \n","    # solve linear system A * w = b for the weights vector w\n","    w = np.linalg.solve(A, b)\n","    w = w.reshape((m + 1,))\n","    \n","    return w\n","\n","if __name__ == '__main__':\n","\n","    pass"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"metadata":{"id":"3hofXrMyxelb","colab_type":"code","outputId":"0a2c0045-b4e7-42a9-ed3f-4e800a8d7272","executionInfo":{"status":"ok","timestamp":1551653610699,"user_tz":300,"elapsed":9164,"user":{"displayName":"Mountain Chan","photoUrl":"","userId":"06751548981326338197"}},"colab":{"base_uri":"https://localhost:8080/","height":207}},"cell_type":"code","source":["import sys\n","import time\n","import datetime\n","import os\n","import math\n","import numpy as np\n","import matplotlib as mpl\n","from matplotlib import pyplot as plt\n","from matplotlib import rc\n","from matplotlib.pyplot import legend\n","!pip install Numdifftools\n","!pip install symengine\n","\n","# From Handbook of Mathematical Functions, formula 7.1.26.\n","def erf(x):\n","    # save the sign of x\n","    sign = 1 if x >= 0 else -1\n","    x = abs(x)\n","\n","    # constants\n","    a1 =  0.254829592\n","    a2 = -0.284496736\n","    a3 =  1.421413741\n","    a4 = -1.453152027\n","    a5 =  1.061405429\n","    p  =  0.3275911\n","\n","    # A&S formula 7.1.26\n","    t = 1.0/(1.0 + p*x)\n","    y = 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*math.exp(-x*x)\n","    return sign*y # erf(-x) = -erf(x)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: Numdifftools in /usr/local/lib/python3.6/dist-packages (0.9.20)\n","Requirement already satisfied: scipy>=0.8 in /usr/local/lib/python3.6/dist-packages (from Numdifftools) (1.1.0)\n","Requirement already satisfied: algopy>=0.4 in /usr/local/lib/python3.6/dist-packages (from Numdifftools) (0.5.7)\n","Requirement already satisfied: numpy>=1.9 in /usr/local/lib/python3.6/dist-packages (from Numdifftools) (1.14.6)\n","Requirement already satisfied: setuptools>=9.0 in /usr/local/lib/python3.6/dist-packages (from Numdifftools) (40.8.0)\n","Collecting symengine\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/c6/11/e3898344cb98274d12a3cd5ff3e2bd0ea11b0142bcaeb5479ad9d9ab1b6d/symengine-0.3.0-cp36-cp36m-manylinux1_x86_64.whl (2.3MB)\n","\u001b[K    100% |████████████████████████████████| 2.3MB 11.0MB/s \n","\u001b[?25hInstalling collected packages: symengine\n","Successfully installed symengine-0.3.0\n"],"name":"stdout"}]},{"metadata":{"id":"2-t91hJo7U0E","colab_type":"code","outputId":"0df32c5f-732b-4189-d390-8a36c4be2fae","executionInfo":{"status":"error","timestamp":1551209633228,"user_tz":300,"elapsed":453,"user":{"displayName":"Mountain Chan","photoUrl":"","userId":"06751548981326338197"}},"colab":{"base_uri":"https://localhost:8080/","height":388}},"cell_type":"code","source":["#!/usr/bin/python\n","# -*- coding: utf-8 -*-\n","##############################\n","# author: Saran Ahluwalia\n","# contact: ssahluwa@ncsu.edu\n","# date: 2019-02-23\n","##############################\n","\n","import sys\n","import time\n","import datetime\n","import os\n","import math\n","import numpy as np\n","import matplotlib as mpl\n","from matplotlib import pyplot as plt\n","from matplotlib import rc\n","from matplotlib.pyplot import legend\n","\n","\n","def ensure_dir(dir):\n","    if not os.path.exists(dir):\n","        os.makedirs(dir)\n","\n","now = datetime.datetime.now()\n","now = \"%s-%s-%s\" %(now.year, str(now.month).zfill(2), str(now.day).zfill(2))\n","\n","BASEDIR = os.path.dirname(os.path.abspath('__file__'))\n","RAWDIR = os.path.join(BASEDIR, 'raw')\n","OUTDIR = os.path.join(BASEDIR, 'out')\n","\n","ensure_dir(RAWDIR)\n","ensure_dir(OUTDIR)\n","\n","def poly_horner(x, coeff):\n","    \n","    result = coeff[-1]\n","    for i in range(-2, -len(coeff) - 1, -1):\n","        result = result * x + coeff[i]\n","    return result\n","\n","if __name__ == '__main__':\n","    \n","    ###################################################################\n","    # randomize training data\n","        \n","    Xt = np.random.uniform(-10,10,size=(21, 2))\n","    \n","    assert Xt.shape == (21, 2), \"Error: Shape assertion failed.\"\n","    \n","    print(\"Training data shape =\", Xt.shape)\n","    \n","    seedValue = 523456789\n","\n","    ###################################################################\n","    \n","    # polynomial fitting orders\n","    jobs = np.arange(0, 10).reshape(-1)\n","    \n","    p1 = None \n","    for m in jobs:\n","    \n","        # polynomial least squares fitting\n","        w = polyLeastSquares(m, Xt)\n","        print(\"fitted weights =\", w)\n","        # use poly d to validate that Horner's method works\n","#         p1 = np.poly1d(w)\n","        # print the polynomial coefficients to compare with regression\n","#         print('Rebuilt polynomial from coefficients = {}'.format(p1))\n","        \n","        # create fitted model\n","    \n","        nModelPoints = 800\n","        xVals = np.linspace(0.0, 1.0, nModelPoints)\n","        yVals = np.array([poly_horner(x, w) for x in xVals])\n","        Xm = np.zeros((nModelPoints, 2))\n","        Xm[:, 0] = xVals\n","        Xm[:, 1] = yVals\n","    \n","        #################################################################\n","        # file i/o\n","    \n","        outname = '/content/gdrive/My Drive/raw/polynomial_least_squares_curve_fitting.2_training_data_PRNG-seed_%d_m_%d_fit.txt' \\\n","                  %(seedValue, m)\n","    \n","        np.savetxt(os.path.join(RAWDIR, outname), Xm, fmt = '%.8f')\n","        ################################################################"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Training data shape = (21, 2)\n","fitted weights = [-0.66185531]\n"],"name":"stdout"},{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-78783803df03>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     76\u001b[0m         \u001b[0moutname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'/content/gdrive/My Drive/raw/polynomial_least_squares_curve_fitting.2_training_data_PRNG-seed_%d_m_%d_fit.txt'\u001b[0m                   \u001b[0;34m%\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseedValue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mm\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 78\u001b[0;31m         \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msavetxt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mRAWDIR\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mXm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%.8f'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     79\u001b[0m         \u001b[0;31m################################################################\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/lib/npyio.py\u001b[0m in \u001b[0;36msavetxt\u001b[0;34m(fname, X, fmt, delimiter, newline, header, footer, comments, encoding)\u001b[0m\n\u001b[1;32m   1305\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0m_is_string_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1306\u001b[0m         \u001b[0;31m# datasource doesn't support creating a new file ...\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1307\u001b[0;31m         \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'wt'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1308\u001b[0m         \u001b[0mfh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_datasource\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'wt'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1309\u001b[0m         \u001b[0mown_fh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/gdrive/My Drive/raw/polynomial_least_squares_curve_fitting.2_training_data_PRNG-seed_523456789_m_0_fit.txt'"]}]},{"metadata":{"id":"Btd806yc8GEI","colab_type":"code","outputId":"4145c293-9f6f-40c6-d6ec-c4dd41514d06","executionInfo":{"status":"ok","timestamp":1551202984738,"user_tz":300,"elapsed":1180,"user":{"displayName":"Saran Ahluwalia","photoUrl":"","userId":"09376436326309786117"}},"colab":{"base_uri":"https://localhost:8080/","height":68}},"cell_type":"code","source":["#!/usr/bin/python\n","# -*- coding: utf-8 -*-\n","import sys\n","import time\n","import datetime\n","import os\n","import math\n","import numpy as np\n","import matplotlib as mpl\n","from matplotlib import pyplot as plt\n","from matplotlib import rc\n","from matplotlib.pyplot import legend\n","\n","\n","def ensure_dir(dir):\n","    if not os.path.exists(dir):\n","        os.makedirs(dir)\n","\n","now = datetime.datetime.now()\n","now = \"%s-%s-%s\" %(now.year, str(now.month).zfill(2), str(now.day).zfill(2))\n","\n","BASEDIR = os.path.dirname(os.path.abspath('__file__'))\n","RAWDIR = os.path.join(BASEDIR, 'raw')\n","OUTDIR = os.path.join(BASEDIR, 'out')\n","\n","ensure_dir(RAWDIR)\n","ensure_dir(OUTDIR)\n","\n","def getFigureProps(width, height, lFrac = 0.17, rFrac = 0.9, bFrac = 0.17, tFrac = 0.9):\n","    '''\n","    True size scaling auxiliary function to setup mpl plots with a desired size.\n","    Specify widht and height in cm.\n","    lFrac = left fraction   in [0, 1]\n","    rFrac = right fraction  in [0, 1]\n","    bFrac = bottom fraction in [0, 1]\n","    tFrac = top fraction    in [0, 1]\n","    returns:\n","        fWidth = figure width\n","        fHeight = figure height\n","    These figure width and height values can then be used to create a figure instance \n","    of the desired size, such that the actual plotting canvas has the specified\n","    target width and height, as provided by the input parameters of this function.\n","    '''\n","    axesWidth = width / 2.54    # convert to inches\n","    axesHeight = height / 2.54  # convert to inches\n","    fWidth = axesWidth / (rFrac - lFrac)\n","    fHeight = axesHeight / (tFrac - bFrac)\n","    return fWidth, fHeight, lFrac, rFrac, bFrac, tFrac\n","    \n","def Plot(degree, titlestr, X, Xt, Xm, params, outname, outdir, pColors, \n","        grid = False, drawLegend = True, xFormat = None, yFormat = None, \n","        savePDF = True, savePNG = False, datestamp = True):\n","\n","    mpl.rcParams['xtick.top'] = True\n","    mpl.rcParams['xtick.bottom'] = True\n","    mpl.rcParams['ytick.right'] = True\n","    mpl.rcParams['xtick.direction'] = 'in'\n","    mpl.rcParams['ytick.direction'] = 'in'\n","\n","    mpl.rc('font',**{'size': 10})\n","    mpl.rc('legend',**{'fontsize': 7.0})\n","    mpl.rc(\"axes\", linewidth = 0.5)    \n","    \n","    # plt.rc('font', **{'family' : 'sans-serif', 'sans-serif' : ['Myriad Pro']})\n","    plt.rc('font', **{'family' : 'sans-serif', 'sans-serif' : ['Helvetica']})\n","    plt.rcParams['pdf.fonttype'] = 42  \n","    mpl.rcParams['text.usetex'] = False\n","    mpl.rcParams['mathtext.fontset'] = 'cm'\n","    fontparams = {'text.latex.preamble': [r'\\usepackage{cmbright}',\n","                  r'\\usepackage{amsmath}']}\n","    mpl.rcParams.update(fontparams)     \n","    \n","    ######################################################################################\n","    # set up figure\n","    fWidth, fHeight, lFrac, rFrac, bFrac, tFrac =\\\n","        getFigureProps(width = 4.1, height = 2.9,\n","                       lFrac = 0.10, rFrac = 0.95, bFrac = 0.15, tFrac = 0.95)\n","    f, ax1 = plt.subplots(1)\n","    f.set_size_inches(fWidth, fHeight)    \n","    f.subplots_adjust(left = lFrac, right = rFrac)\n","    f.subplots_adjust(bottom = bFrac, top = tFrac)\n","    ######################################################################################\n","    labelfontsize = 6.0\n","\n","    for tick in ax1.xaxis.get_major_ticks():\n","        tick.label.set_fontsize(labelfontsize)\n","    for tick in ax1.yaxis.get_major_ticks():\n","        tick.label.set_fontsize(labelfontsize)\n","        \n","    xticks = plt.getp(plt.gca(), 'xticklines')\n","    yticks = plt.getp(plt.gca(), 'yticklines')\n","    ax1.tick_params('both', length = 1.5, width = 0.5, which = 'major', pad = 3.0)\n","    ax1.tick_params('both', length = 1.0, width = 0.25, which = 'minor', pad = 3.0)\n","\n","    ax1.tick_params(axis='x', which='major', pad = 2.0)\n","    ax1.tick_params(axis='y', which='major', pad = 2.0, zorder = 10)\n","    ######################################################################################\n","    # labeling\n","    plt.title(titlestr)\n","    ax1.set_xlabel(r'$x$', fontsize = 6.0, x = 0.85)\n","    # rotation is expressed in degrees\n","    ax1.set_ylabel(r'$t$', fontsize = 6.0, y = 0.70, rotation = 0.0)\n","    ax1.xaxis.labelpad = -1.75\n","    ax1.yaxis.labelpad = -1.75 \n","    ######################################################################################\n","    # plotting\n","    \n","    lineWidth = 0.65    \n","        \n","    ax1.plot(X[:, 0], X[:, 1], \n","             color = pColors[0],\n","             alpha = 1.0,\n","             lw = lineWidth,\n","             zorder = 2,\n","             label = r'')\n","             \n","#     ax1.scatter(Xt[:, 0], Xt[:, 1],\n","#                 s = 10.0,\n","#                 lw = lineWidth,\n","#                 facecolor = 'None',\n","#                 edgecolor = pColors[1],\n","#                 zorder = 3,\n","#                 label = r'')\n","\n","    ax1.plot(Xm[:, 0], Xm[:, 1], \n","             color = pColors[2],\n","             alpha = 1.0,\n","             lw = lineWidth,\n","             zorder = 2,\n","             label = r'')\n","\n","    ######################################################################################\n","    # annotations\n","    \n","    label = 'Degree (m), {}'.format(degree)\n","    \n","    x_pos = 0.75\n","    \n","    ax1.annotate(label,\n","                 xy = (x_pos, 0.79),\n","                 xycoords = 'axes fraction',\n","                 fontsize = 5.0, \n","                 horizontalalignment = 'left')\n","             \n","    ######################################################################################\n","    # legend\n","    if (drawLegend):\n","        leg = ax1.legend(#bbox_to_anchor = [0.7, 0.8],\n","                         #loc = 'upper left',\n","                         handlelength = 1.5, \n","                         scatterpoints = 1,\n","                         markerscale = 1.0,\n","                         ncol = 1)\n","        leg.draw_frame(False)\n","        plt.gca().add_artist(leg)\n","    \n","    ######################################################################################\n","    # set plot range  \n","    if (xFormat == None):\n","        pass\n","    else:\n","        major_x_ticks = np.arange(xFormat[2], xFormat[3], xFormat[4])\n","        minor_x_ticks = np.arange(xFormat[2], xFormat[3], xFormat[5])\n","        ax1.set_xticks(major_x_ticks)\n","        ax1.set_xticks(minor_x_ticks, minor = True)\n","        ax1.set_xlim(xFormat[0], xFormat[1])\n","        \n","    if (yFormat == None):\n","        pass\n","    else:\n","        major_y_ticks = np.arange(yFormat[2], yFormat[3], yFormat[4])\n","        minor_y_ticks = np.arange(yFormat[2], yFormat[3], yFormat[5])\n","        ax1.set_yticks(major_y_ticks)\n","        ax1.set_yticks(minor_y_ticks, minor = True)\n","        ax1.set_ylim(yFormat[0], yFormat[1])\n","          \n","    ax1.set_axisbelow(False)\n","    for k, spine in ax1.spines.items():  #ax.spines is a dictionary\n","        spine.set_zorder(10)\n","    \n","    ######################################################################################\n","    # grid options\n","    if (grid):\n","        ax1.grid(color = 'gray', linestyle = '-', alpha = 0.2, which = 'major', \n","                 linewidth = 0.2)\n","        ax1.grid('on')\n","        ax1.grid(color = 'gray', linestyle = '-', alpha = 0.05, which = 'minor', \n","                 linewidth = 0.1)\n","        ax1.grid('on', which = 'minor')\n","    ######################################################################################\n","    # save to file\n","    if (datestamp):\n","        outname += '_' + now\n","    if (savePDF):\n","        f.savefig(os.path.join(outdir, outname) + '.pdf', dpi = 300, transparent = True)\n","    if (savePNG):\n","        f.savefig(os.path.join(outdir, outname) + '.png', dpi = 600, transparent = False)\n","    ######################################################################################\n","    # close handles\n","    plt.cla()\n","    plt.clf()\n","    plt.close()\n","    return outname\n","\n","def poly_horner2(x, coeff):\n","    result = coeff[-1]\n","    for i in range(-2, -len(coeff)-1, -1):\n","        result = result * x + coeff[i]\n","    return result\n","\n","if __name__ == '__main__':\n","\n","    nVisPoints = 800\n","    xVals = np.linspace(-10.0, 10.0, nVisPoints)\n","    yVals = np.array([erf(x) for x in xVals])\n","    \n","    X = np.zeros((nVisPoints, 2))\n","    X[:, 0] = xVals\n","    X[:, 1] = yVals\n","  \n","    # fix random number seed for reproducibility\n","    seedValue = 523456789\n","    seed = np.random.seed(seedValue)\n","    \n","    # regularization parameters     \n","    mu = 0.0\n","    sigma = 0.3\n","    \n","    # number of training data points\n","    # Xt = training data set\n","    # create nTrain training data points (here nTrain = 21)\n","\n","#     nTrain = 21\n","    \n","#     Xt = np.zeros((nTrain, 2))\n","#     xtVals = np.linspace(0.0, 1.0, nTrain)\n","#     ytVals = np.array([erf(x) + np.random.normal(mu, sigma) \n","#                        for x in xtVals])\n","#     Xt[:, 0] = xtVals\n","#     Xt[:, 1] = ytVals\n","    \n","    ######################################################################################\n","    # file i/o\n","    \n","    outname = '/content/gdrive/My Drive/raw/polynomial_least_squares_curve_fitting.2_training_data_PRNG-seed_%d.txt' %(seedValue)\n","    \n","    np.savetxt(os.path.join(RAWDIR, outname), Xt, fmt = '%.8f')\n","    ######################################################################################\n","    \n","    ######################################################################################\n","    # polynomial least squares fitting\n","    m = 9\n","    w = polyLeastSquares(m, Xt)\n","    print(\"fitted weights =\", w)\n","    ######################################################################################\n","    \n","    ######################################################################################\n","    # create fitted model\n","    \n","    nModelPoints = 21\n","    xVals = np.linspace(-10.0, 10.0, nModelPoints)\n","    yVals = np.array([poly_horner2(x, w) for x in xVals])\n","    Xm = np.zeros((nModelPoints, 2))\n","    Xm[:, 0] = xVals\n","    Xm[:, 1] = yVals\n","    \n","    ######################################################################################\n","    # file i/o\n","    \n","    outname = '/content/gdrive/My Drive/raw/polynomial_least_squares_curve_fitting_figure_1.2_training_data_PRNG-seed_%d_m_%d_fit.txt' \\\n","              %(seedValue, m)\n","    \n","    np.savetxt(os.path.join(RAWDIR, outname), Xm, fmt = '%.8f')\n","    ######################################################################################\n","    \n","    ######################################################################################\n","    # call the plotting function\n","    \n","    outname = '/content/gdrive/My Drive/raw/polynomial_least_squares_curve_fitting_figure_1.4_PRNG-seed_%d_m_%d_fit_polynomial_leastSq' \\\n","              %(seedValue, m)\n","    \n","    xFormat = [-10.35, -5.35, -1.0, 0.1, 5.0, 10.0]\n","    yFormat = [-10.35, -5.35, -1.0, 0.1, 5.0, 10.0]\n","        \n","    pColors = ['#00FF00', # neon green\n","               '#0000FF', # standard blue\n","               '#FF0000'] # standard red\n","    \n","    outname = Plot(9, titlestr = '',\n","                   X = X,\n","                   Xt = None,\n","                   Xm = Xm,\n","                   params = [], \n","                   outname = outname,\n","                   outdir = OUTDIR,\n","                   pColors = pColors, \n","                   grid = False,\n","                   drawLegend = False, \n","                   xFormat = xFormat,\n","                   yFormat = yFormat)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["fitted weights = [-1.68177201e-01  2.31152448e+00 -2.01267197e+00 -4.09696325e-01\n","  2.26515984e-01  6.48857584e-03 -6.73467763e-03  2.13140806e-04\n","  5.48755226e-05 -3.19177112e-06]\n"],"name":"stdout"}]},{"metadata":{"id":"OeSMx6BmSBxC","colab_type":"code","outputId":"b386270b-2a36-4901-bfe7-18721334372b","executionInfo":{"status":"ok","timestamp":1551044009336,"user_tz":300,"elapsed":824,"user":{"displayName":"Saran Ahluwalia","photoUrl":"","userId":"09376436326309786117"}},"colab":{"base_uri":"https://localhost:8080/","height":401}},"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","class Polynomial:\n","    \n","    def __init__(self, *coefficients):\n","        \"\"\" input: coefficients are in the form a_n, ...a_1, a_0 \n","        \"\"\"\n","        # for reasons of efficiency we save the coefficients in reverse order,\n","        # i.e. a_0, a_1, ... a_n\n","        self.coefficients = coefficients[::-1] # tuple is also turned into list\n","     \n","    def __repr__(self):\n","        \"\"\"\n","        method to return the canonical string representation \n","        of a polynomial.\n","   \n","        \"\"\"\n","        # The internal representation is in reverse order,\n","        # so we have to reverse the list\n","        return \"Polynomial\" + str(self.coefficients[::-1])\n","    \n","    def __call__(self, x):    \n","        res = 0\n","        for index, coeff in enumerate(self.coefficients):\n","            res += coeff * x** index\n","        return res \n","    \n","    def degree(self):\n","        return len(self.coefficients)\n","    \n","    @staticmethod\n","    def zip_longest(iter1, iter2, fillchar=None):    \n","        for i in range(max(len(iter1), len(iter2))):\n","            if i >= len(iter1):\n","                yield (fillchar, iter2[i])\n","            elif i >= len(iter2):\n","                yield (iter1[i], fillchar)\n","            else:\n","                yield (iter1[i], iter2[i])\n","            i += 1   \n","            \n","    def __add__(self, other):\n","        c1 = self.coefficients\n","        c2 = other.coefficients\n","        res = [sum(t) for t in Polynomial.zip_longest(c1, c2, 0)]\n","        return Polynomial(*res[::-1])\n","    \n","    def __sub__(self, other):\n","        c1 = self.coefficients\n","        c2 = other.coefficients\n","        res = [t1-t2 for t1, t2 in Polynomial.zip_longest(c1, c2, 0)]\n","        return Polynomial(*res[::-1])\n","    \n","    def derivative(self):\n","        derived_coeffs = []\n","        exponent = 1\n","        for i in range(1, len(self.coefficients)):\n","            derived_coeffs.append(self.coefficients[i] * exponent)\n","            exponent += 1\n","        return Polynomial(*derived_coeffs[::-1])\n","    \n","    def __str__(self):\n","        res = \"\"\n","        for i in range(len(self.coefficients)-1, -1, -1):\n","            res +=  str(self.coefficients[i]) + \"x^\" + str(i) + \" + \"\n","        if res.endswith(\" + \"):\n","            res = res[:-3]\n","        return res\n","            \n","p = Polynomial(-0.8, 2.3, 0.5, 1, 0.2)\n","p_der = p.derivative()\n","X = np.linspace(-2, 3, 50, endpoint=True)\n","F = p(X)\n","F_derivative = p_der(X)\n","plt.plot(X, F, label=\"F\")\n","plt.plot(X, F_derivative, label=\"F_der\")\n","plt.legend()\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/matplotlib/font_manager.py:1241: UserWarning: findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.\n","  (prop.get_family(), self.defaultFamily[fontext]))\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAegAAAFKCAYAAADWhMzpAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzt3Xd0XPWhJ/DvdE1Xmxn17irJsjG2\nccHGHbANBmxCQokdCISFsGyy2c1LzsnuSzY5L9kX3nvJ5jmU0AIkBAwYF2KMjQs22OAmN9nqXaNe\npre7f4wt7LhKM6M75fs5R2eExpr71Y+r+eq235UIgiCAiIiIoopU7ABERER0ORY0ERFRFGJBExER\nRSEWNBERURRiQRMREUUhFjQREVEUkosd4GJOpweBQPiu+lKrFXA6vWF7vUTFcQwdxzB0HMPQcQxD\nF4kx1GpVV/x6VBV0ICDA4fCE7fW0WlVYXy9RcRxDxzEMHccwdBzD0EViDK9W0NzFTUREFIVY0ERE\nRFGIBU1ERBSFWNBERERRKKpOEiMiIoom27Ztxq5dO2CxZGDWrDm4775VY7ZsFjQREdE13HPPWsyd\ne+uYL5cFTUREceFvu2rwZVXnqL53xkQz7l9UcsXn3n//HRw4sA+rV6+ByTQ9lIgjwoImIiK6Bm5B\nExERheD+RSVX3QqORSxoIiKiq7jzzrE7Kewfxe1lVl6/F7vrP4c34BM7ChER0YjFbUGf6T2H/zz0\nOj5t2id2FCIiohGL24Iel1IEpUyB/W0HERACYschIiIakbgtaLVcjTm5N6Pb1YtzfbVixyEiIhqR\nuC1oAFhSPA8A8FnbQZGTEBERjUxcn8U9Lq0QWdoMHO86iUHPEAxKvdiRiIgoQt6r2YKjnSdG9b3T\nzOW4t2TlZV+/kak+t23bDKMx+arXSguCAIlEMuJMcV3QEokEc7Nm4Z3qTTjYfhhL828TOxIREcWY\nq01UsmHD7yEIApqbG7Fy5WqcO1eFbdu2wO/3o6ysHCaTGX/5y59RXl6BBx/8NmQy2YiWG9cFDQAz\nM6bhg9qt2N92EIvz5kMqieu9+kRECevekpVX3AoO1ZWm+rTZbOjt7cFPf/q/8cYbrwIA3n77TWRl\n5QAAzp07C5PJjLKyKXjkke+MarlxX9AahQY3mStwsOMwqvvqMCE1fmaZISKiyLvaFrRcrgAAKJVK\nAIDX68Patd+EwWAAABw58hV0Ot2olxv3BQ0Ac7Nm4WDHYexvO8iCJiKikOl0OqSnp+Mvf3kDJ04c\nR3Z2Lh588Nv493//v0hJSUVmZiaKikLrG4kgCEKY8obMbnfD4fCE7fVMJj26uoYgCAL+z6Hn0OXo\nxi/n/hR65ej/oklEF8aRRo9jGDqOYeg4hqGLxBiaTFc+gTkhtqAlEgnmZc3Cu9Uf4mDHYSzJWyB2\nJCIiiiFutxtvvPEqtFoV7HY3SkvLccstcyK6zIQoaACYmXETPqjdhv2tB7E4d/6oTnknIqLEpFKp\n8OijT4zpXoiEOaVZq9BgmmkKOp3dqO6vEzsOERHRNSVMQQPAvOxZAID9nFmMiIiiXEIVdLGxABaN\nGcc6T8DmsYsdh4iI6KoSqqCDJ4vNhE/w42DHYbHjEBERXVVCFTQAzMycDrlEhv1tBxFFV5gRERFd\nIuEKWqfQYqq5HFZHF2oHGsSOQ0REdEUJV9AAMC8reLLYZ608WYyIiKJTQhZ0SXIRzJp0HO2qhN3r\nEDsOERHRZRKyoC/chtIX8PFkMSIiikoJWdAAMCtjOuRSOfa1fI6AEBA7DhER0SUStqD1Sh1uNk9F\np7Mbp3vOih2HiIjoEglb0ABwW+48AMCnzZ+JnISIiOhSCV3QufoslCQXoqqvGu12q9hxiIiIhiV0\nQQPAwpzgVvRubkUTEVEUSfiCnmIqRWpSCg52HOElV0REFDUSvqClEikW5MyBN+DFgbZDYschIiIC\nwIIGAMzJnAGlTIk9LQfgD/jFjkNERMSCBgCNQoNbMqajz92P492nxI5DRETEgr7gtpy5AHiyGBER\nRQcW9HkWrRmTUyegdqABTYMtYschIqIEx4K+yPDEJS3ciiYiInGxoC8yKXUcLBoTDluPY8A9JHYc\nIiJKYCzoi0glUtyWMxd+wY/PWj8XOw4RESUwFvQ/mJkxHWp5Eva1fgFvwCd2HCIiSlAs6H+QJFdh\nTtZMDHltOGI9LnYcIiJKUGEraL/fj9WrV+OJJ54AADQ3N2Pt2rVYunQpnn32WXg8nnAtKuIWZM+F\nBBJ82vIZBEEQOw4RESWgsBX066+/juLi4uH//td//VesW7cOO3bsgMFgwLvvvhuuRUVcmjoFFaZS\nNA+1onagQew4RESUgMJS0B0dHdi9ezfWrFkDABAEAV988QWWL18OALjnnnuwc+fOcCxqzNzGu1wR\nEZGI5OF4kV/96lf40Y9+BLvdDgDo6+uDwWCAXB58+YyMDFit17/fslqtgFarCkekYSaTflTfl54+\nBZvqc3Gs+yT8SU5k6M1hzRVrRjuO9DWOYeg4hqHjGIZurMYw5IL+9NNPkZqairKyMhw8eDCk13I6\nvXA4wnes2mTSo6tr9NczL8y+FS/3v4W3j23FtyauCVuuWBPqOBLHMBw4hqHjGIYuEmN4tcIPuaCP\nHDmCXbt2Ye/evXC73bDZbPjlL3+JwcFB+Hw+yOVydHR0wGKxhLqoMTfNPAWmuu042H4YdxYuRbLK\nKHYkIiJKECEfg/7hD3+IvXv3YteuXXjuuedwyy234Le//S1mzZqF7du3AwDef/99LFq0KOSwY00q\nkWJp/m3wCX7sbNordhwiIkogEbsO+kc/+hFeeeUVLF26FP39/Vi7dm2kFhVRMzOmI1llxGdtB2Hz\n2sWOQ0RECSIsJ4ldMGvWLMyaNQsAkJubG1OXVl2NQirH4rz52Fi9GXua92NF0TKxIxERUQLgTGI3\nYG7WLGgVGuxu2Q+XzyV2HCIiSgAs6BugkimxMGceHD4nPmsL7Ux1IiKiG8GCvkELcuZAJVNiV9Ne\n3kSDiIgijgV9gzQKDW7Nno0BzxAOtn8ldhwiIopzLOgRWJR7K+RSOXY07oY/4Bc7DhERxTEW9AgY\nVQbcknkzul29ONJZKXYcIiKKYyzoEVqatwBSiRQfN36KgBAQOw4REcUpFvQIpavTMN1cgTZ7B071\nVIkdh4iI4hQLehSW5S8EAGxv2AVBEEROQ0RE8YgFPQpZugxMSS9F/WATqvvrxI5DRERxiAU9Shdv\nRRMREYUbC3qUCo15GJ9Sgqq+atQPNIkdh4iI4gwLOgR3FiwGAGyp2y5yEiIiijcs6BCMSynGpNTx\nqOqrxrm+GrHjEBFRHGFBh2hV0XIAwIe123lGNxERhQ0LOkT5hlxUmMpQP9iIkz1nxI5DRERxggUd\nBisLl0ECCTbXbefsYkREFBYs6DDI0mXgZss0tNracZRzdBMRURiwoMNkReFSSCVSbKn/mHe6IiKi\nkLGgw8SkScOczBnodHTjYMcRseMQEVGMY0GH0R2FSyCXyrGtfge8AZ/YcYiIKIaxoMMoWWXEguw5\n6HP347PWL8SOQ0REMYwFHWbL8hdCJVNie8MuuP0eseMQEVGMYkGHmU6pxaLc+Rjy2rC7+TOx4xAR\nUYxiQUfA4rxboZVrsKNpDxxep9hxiIgoBrGgI0AtV2Np/m1w+pzY2bRH7DhERBSDWNARsiBnDgxK\nPXa1fIZBz5DYcYiIKMawoCNEKVPi9oLF8Pg9+Kj+E7HjEBFRjGFBR9DcrJkwa9Kxr/ULtNraxY5D\nREQxhAUdQXKpHPeVrIIAARurN/N2lEREdMNY0BFWlj4Jk1Mn4GxfDSq7T4sdh4iIYgQLegzcN24l\npBIp3qvezClAiYjohrCgx0CG1oIFOXPQ7erFp837xI5DREQxgAU9Ru4sWAKtQoO/N+zEgJuXXRER\n0bWxoMeIRqHBqqLlcPs9+LDuI7HjEBFRlGNBj6G5WbOQrcvEwfbDaBxsFjsOERFFMRb0GJJKpFgz\nLnjZ1bvVH/KyKyIiuioW9Bgbn1KCqaYy1A004rD1mNhxiIgoSrGgRXBPyQrIpXK8X7sNHt4zmoiI\nroAFLYJ0dRoW5d6KfvcAdjTuFjsOERFFIRa0SJbnL4RRqceOpt3odfWJHYeIiKIMC1okSfIk3F18\nJ7wBH96r2Sp2HCIiijIsaBHNyJiGQkM+jnZW4gTn6SYioouwoEUklUjxrYn3QSaR4a9n34fT5xI7\nEhERRQkWtMiydBlYlr8Q/e4BfFj7d7HjEBFRlGBBR4HlBYuQoTFjX+vnqO1vEDsOERFFARZ0FFBI\n5Xhw0hoAwFtV7/KWlERExIKOFkXGAtyaPRsdjk5sb9gldhwiIhIZCzqK3FV8O5JVRnzc+CnabB1i\nxyEiIhGxoKOIWp6EBybcA7/gx5tV7yIgBMSOREREImFBR5ny9MmYbq5Aw2AT9rZ8LnYcIiISCQs6\nCq0dfze0cg021X3EaUCJiBIUCzoK6ZU63DtuJTx+D/5y9j3eN5qIKAGxoKPUrIzpmJgyDqd7zuIr\n3jeaiCjhsKCjlEQiwTcn3guFVIF3qz/EgHtI7EhERDSGWNBRLF2dhruL74DNa8efz7zNs7qJiBJI\nyAXd3t6Ohx9+GHfeeSdWrFiB1157DQDQ39+P9evXY9myZVi/fj0GBgZCDpuIFuTMweTUCTjTew67\nW/aLHYeIiMZIyAUtk8nw4x//GNu2bcPbb7+Nt956CzU1NXjhhRcwe/ZsfPzxx5g9ezZeeOGFcORN\nOFKJFA9Pvh96hQ6baraheahN7EhERDQGQi5os9mM0tJSAIBOp0NRURGsVit27tyJ1atXAwBWr16N\nTz75JNRFJSyDUo+HJq2FT/DjlVNvweP3iB2JiIgiLKzHoFtaWnDmzBlUVFSgp6cHZrMZAGAymdDT\n0xPORSWcsvRJWJgzD1ZHJzZWbxY7DhERRZg8XC9kt9vxzDPP4Cc/+Ql0Ot0lz0kkEkgkkuu+hlqt\ngFarClckAIDJpA/r64np0dT7UbejHp+1HcQthVMxM2fqmC07nsZRLBzD0HEMQ8cxDN1YjWFYCtrr\n9eKZZ57BqlWrsGzZMgBAWloaOjs7YTab0dnZidTU1Ou+jtPphcMRvt23JpMeXV3xdXnSwxMfwK+/\n/A9sOPhnpCAdySpjxJcZj+M41jiGoeMYho5jGLpIjOHVCj/kXdyCIOCnP/0pioqKsH79+uGvL1q0\nCB988AEA4IMPPsDixYtDXRQByNRacG/JKth9Drx26q+89IqIKE6FXNCHDx/Gpk2b8MUXX+Duu+/G\n3XffjT179uDxxx/H/v37sWzZMhw4cACPP/54OPISgFuzb0F5+mSc66/FJ017xI5DREQREPIu7ptv\nvhlnz5694nMXromm8JJIJHho4lr86tBz2Fy3HRNSSpBvyBU7FhERhRFnEotROqUWj0x+AIIg4JVT\nb8Hlc4kdiYiIwogFHcMmpo7DkrwF6HL24M9n/sbj0UREcYQFHeNWFS3HuOQiHOs6ie0Nu8SOQ0RE\nYcKCjnEyqQyPlj2E1KQUbKn/GMe7TokdiYiIwoAFHQf0Sh0eL/82FFIFXjv9F7TbrWJHIiKiELGg\n40SuPgsPT1oLt9+D5ytfhcPrEDsSERGFgAUdR6ZbpmJZ/kJ0OXvw8qm3eNIYEVEMY0HHmVVFy1Ga\nNhFnes9hU+1HYschIqJRYkHHGalEivWl34RZk45Pmvbgy46jYkciIqJRYEHHIbVcjSfK1yFJloQ3\nq95B01CL2JGIiGiEWNBxKkNrxrrSB+AL+PFC5esY8tjEjkRERCPAgo5j5emTsbJoOfrc/dhQ+Qpc\nPrfYkYiI6AaxoOPc8vyFmJUxHY2DzXjxxOvwBnxiRyIiohvAgo5zEokED05cg/L0Sajqq8brp3kP\naSKiWMCCTgAyqQzfKX0IxcZCHOmsxNtn34cgCGLHIiKia2BBJwilTIEnK9YhW5eJz9oOYkv9x2JH\nIiKia2BBJxC1XI2npz4GkzoNf2/YiV3N+8SOREREV8GCTjAGpR5PT/0ujEo9NlZvxsH2w2JHIiKi\nK2BBJ6B0dSqenvpdqOVqvFH1Dk50nxY7EhER/QMWdILK0mXgv1R8B3KJDH86+Qaq++rEjkRERBdh\nQSewImM+Hit/BH4hgA2VL+NcX63YkYiI6DwWdIIrTZuAR0sfhC/gx38e/xNOdp8ROxIREYEFTQCm\nmsvxvSnrAEjw/InXcNh6TOxIREQJjwVNAIDJaRPw9NTHoJQq8cqpv+BA2yGxIxFRjBIEAYGAAJ8/\nAK8vAI/XD4/XzwmSRkgudgCKHiXJhfiv0x7H/zv+Et6sehcunwuL8uaLHYuIRBIICOgdcqGrz4ne\nITdsTi9sTi+GHF4MOTyX/LfT7UMgIOBaFSyXSaBTK6BTK6HXKIKfaxTQq4OfpyerkWPSIs2QBIlE\nMmY/Z7RiQdMl8gw5+G83PYnfH30RG2u2wOl349vp94gdi4giJCAI6O53oqPXia5+J6x9DnT2BT/v\n6nfC57965UokgE6tgF6jgCVVDalEAolEAqkkeB8AyYXH8//e4fbB5vCiZ9CFlq6r3wJXrZIh26RD\nrkmHHJMWOWYdstN10CQlVmUl1k9LNyRTa8EPpj+J3x19Edvqd0CiCOCO7GX8i5Yoxnl9fjR2DKHR\nOoRmqw1NnUNo7rTB5fFf9m+1SXLkmvWwpKhhSlYjzZgU3NI9v+Wr1yihSZJDOsr3BZ8/APuFrXFn\ncIvc2udES6cNLV021LYOoKZl4JLvsaSoUVaUhoriNEzIS4ZCLhvVsmOFRIiigwJ2uxsOhydsr2cy\n6dHVNRS210s0/e4B/P7oi+hwdGJO5gw8MOFeyKTx/QsRKVwXQ8cxHJlAQBguutq2QTRZh9De44A/\n8PVbvkQCZKZpkWfWITNNA3OKBuYUNcwpamiTFCKmD/4x0dbtQEtXsLBbOm2obRsc/mNCqZBicn4q\nppSkYUpRGlINSWOSKxLrocmkv+LXWdB0TTaPHX889TLq+5oxPqUEj5Y9CJ1CK3asmMN1MXQcw2tz\nuLyoaxtETesAas6XsvuiLWOlQoqiLCMyUzXIteiQb9EjO10LpSJ2/uj2+QOobu5HZV0PKmt70N7j\nGH4ux6RDRUka5pVnwpKqiVgGFnSY8Bc6PLTJcvx270s40X0aaUmpeGLKt5GtyxQ7Vkzhuhg6juGl\nBh0enG3qR1VjH8619KOty37JCVqZaRqUZBtRkm1EcbYRGakaWCyGuBrDzn4nKmu6UVnXg6rGfvj8\nwXvdlxWlYtFNOZhSlAapNLyH5ljQYcJf6PAwmfSwdg5gW/0n+KjhEyilCjw8+Ru4yTxF7Ggxg+ti\n6BJ9DO0u73AhVzX1oaXLPvycUiFFUaYBJTnBQi7KMkKnvnwXdTyPodvjx7Gabuw60oLq88eu041J\nWHRTDuZNybzieIwGCzpM4nllHEsXj+OxzhN47czb8Pg9uD1/EVYULYNUwsvpr4frYugSbQy9Pj/O\ntQzgVH0vzjT0ock6NLyFrJBLUZJtxKT8FEzMT0FBhh5y2fV/DxNlDJusQ9h1pAVfnLLC4wtAIZfi\nlskWLLopB/kZVy7DG8WCDpNEWRkj7R/Hsc3WgecrX0W3qxdlaZOwrvQBqOVqERNGP66LoYv3MRQE\nAW3ddpys78Wp+l6cbe6H1xfcZSuXSVCUdb6Q85JRlGWEQj7yP4zjfQz/kc3pxWeV7fj0aAu6+l0A\ngPKiNNy/qATZ6aM7l4YFHSaJtjJGypXG0e514OWTb6KqrxoWjRlPlD8Ci9YsUsLox3UxdPE4hjan\nF6fqe3Gyvgen6nvRb/v6/S/bpEVpQSrKilIxLicZqjCczBWPY3gjAoKAk3U9+PvBJlQ19UMqkeC2\naVm4e14h9BrliF6LBR0miboyhtvVxtEf8GNT7UfY2bwXSbIkPDhpDY9LXwXXxdDFwxgGBAGNHUM4\nUdeDE3U9qGsbxIV3YJ1agdLCVJQWpKK0MBUpelXYlx8PYxgKQRBwvKYHb39aA2uvA2qVHHfNLcDi\n6Tk3dIgAYEGH7fUSfWUMl+uN46GOI3iraiO8AS9utkzFN8avhkYRucscYhHXxdCN9RgKggCnzwWH\nzwm33w2Xzw2X3z38+YVHv+CDRCKFFJLzs2ZJIJVIhz/3+4HevgDaOrxoaHHBbpNA8CkhEWQozk5G\neVEayotSkWfRj3rSjxvF9TDI5w/g0yOt+HB/PewuH8wpaty/sATTxqVfd0ImFnSYcGUMjxsZR6u9\nE6+f+RsaBptgVBrw4KS1KE2bMEYJox/XxdCFcwwDQgAD7kF0OXvQ7x7AgHsQA57B4OOFD88gvAFf\nWJZ3JTKJDDqFBlqFFunqNJg16bBoTDBrTLBoTNAptGGfvY/r4aVsTi82fVaPT4+0IiAImJiXjAcW\nj0Oe5eonkrGgw4QrY3jc6Dj6A37saNqDbfU74Bf8mJc1C/eUrESSPPy76mIN18XQjXQMBUHAgGcQ\nXY5udDq70eXoOf/YjS5n91XLVwIJDEodjCoDDEoDtAoNVDIVkuSq4KNMBZU8+JgkU0EulcHl8aHR\nOoTatgHUdwzA5vQCEgESiQBLWhIyzQqkpUghU/ng8Dlg89ph9zpg9zpg89jg8rsvy6GRq4fLOkeX\nieLkQuToskKazY/r4ZW199jx9q4aVNb2QCaV4L4FxVg2M/eKezRY0GHClTE8RjqOLUNteO30X9Fm\n70BaUioemfwNlCQXRjBh9OO6GLprjaHL50a73Yo2Wzta7e1otbWj1dYBp8952b9Nkqlg0qTDrE6H\nSZ2G5CQjjEoDjKrgh16hu24JCoKAjl4HTtT2oLKuB2eb+oen0NSpFSgvSkV5cRrKCtOue/2tIAiw\nee2wOrrQ6eiC9fxH5/k/JAJCYPjfKmVKFBryUGwsQHFyIQoMeSP6A5jr4bVV1nbj5W1VGLR7UFaU\nisdWTIZBe+lJZCzoMOHKGB6jGUdvwIdt9Tuwo3E3AGBR3q1YVbgcCpm48/uKheti6C6Moc1jR+NQ\nM5oGW9Bia0OrrR3dzl5cfKNDCSQwa9KRqc2A+UIZa9Jh1qRDr9CNatex2+vH2aY+nKjtRWVd9/Bl\nOwCQb9GjvDh4E4fCTEPYZq/yB/zodvWicbAZtQMNqOtvQJu9Y/h5qUSKHF0mSpKLMNVUjkJj3jXn\nJeB6eH0Ddg/+tOU0Ttb3wqhV4rFVk1FakDr8PAs6TLgyhkco41g30IDXT7+NLmcP0tVpuKdkBSrS\nSxPuzlhcF0fH6XOheagFjYMt6PB0oLqrHj2uvkv+jVauQbYuE9m6TGTpMpGty0Cm1gKlbGSXz1xJ\nZ58DJ+p6UVnbg6qmvuHrktUqGUoLglvJ5UVpSNaN3WEcu9eB+oFG1A40oLa/Ho2DzfAJwTm3jUo9\nKkzlmGYuQ7Gx8LI9AVwPb0xAEPDxoWZs3FOLQEDAHbfkY/WthZDLpCzocOHKGB6hjqPb78Hmur9j\nT8sBBIQAxiUX4b5xq5Crzw5jyujGdfH6AkIAnY4u1A00om6gEfUDjbA6ui7ZMtYptMgz5CBfn4t8\nQw5y9dkwKg1h+4PP7fGjqqkPJ+t6caK+B519X+8izzFpUV4cvHNScbbxhi/LiTSv34tz/XU41nkC\nx7tPwu4N3kBCp9CiwlSKqaZyTEgpgUwq43o4QvXtg3h+0yl09jtRlGXAE3eVYvI4Mws6HLgyhke4\nxtFq78T7tVtxovsMJJBgVsZ0rCpejmSVMQwpoxvXxcu5fG40DTVfUsiOi44Zq2RK5OlzkG/IRb4h\nF9MKJgJ2RVj3vgiCgNZue7CQ63pQ3dIPnz/4lpiklGHy+YlCxvJ2hqHwB/yo7q/Dsa6TONZ1AkMe\nG4DgCWe3ZN6M1VOWQuaM/p8jmjjdPvz547P44pQVapUM379/GiZmG8K6DBY0jVq4x7Gqtxrv1WxB\nq60dSpkSy/Juw+K8+WHZJRmtuC4Cg54h1PYHd8vWDtSjxdZ+yQlQ6eo0FBnzUWjIR5ExH1m6jEuO\np4ZrDAfsHpxp6MWphl6cbuhD39DXZ1DnWXQoL0pDWWFqVG0lj0ZACKBuoBFHOytxuPM4hjw2SCBB\nadoEzM+Zi0mp4ziP/g0SBAEHTnbgjY/PwePz49++Pw+GEc5Adi0saBq1SIxjQAjg87YvsbluO4a8\nNiSrjFhVtBwzLNNCuowkWiXauigIArqc3ajtb0DNQD3q+hvQ6ewefl4ukSHPkIMiY0GwlI35MCiv\nfROD0Y6h2+PHuZZ+nKoPFnJLl234OZ1agbLC4FZyaWEajNr4/CPRF/DhaOcJ7Ld+geqeegCAWZOO\n+dlzcEvmzVDLuVV9Izr7HOiyeTE5J3yHVQAWNIUgkuPo9LnwceOn2NW8D76ADymqZCzKnYc5WTOR\nFEdvGvG+LgaEAFptHajpr0Ntfz1qBuqHd68CQJIsCUXJ+SgxFqI4uRD5+pwRn9F/o2Po9QVQ3z6I\nqqY+VDX2oaZ1YHi3tUIuxfgcIyYXpmJyfipyLbqIz94VTUwmPb6qPY09LQdw2HoMPsEPlUyJWRk3\nY1HurTBp0sSOGPV4kliYxPub4lgZi3HscfZhZ/NefN52CJ6AF2p5EuZl3YLbcufGxTHqeFsXvQEf\nmgZbUNtfj+qBOtT1N8Ll//qyI6PSgOLk4LW6JcbCy3ZXj8bVxtDnD6CubRBnm/pQ1dSP2tYBeM6f\nbS0BkJehR2lBKiYXpGBcjhEKefztoblRF4/hkMeG/W2HsK/1c/S7ByCVSDEvaxZuL1gCoyq0WzLG\nMxZ0mMTbm6JYxnIcbV479rV8gT0t+zHktUEmkWFGxjQszp2PLF3GmGSIhFhfFx1eJ+oGGs5f2tOA\npqHmS2biMqvTUZxcOFzI6erUiE1T6fb4Udc+iJqWfpxt7kdNy9eFDATPtp6Yl4IJeSmYkJd83YlC\nEsmV1kN/wI+jnZXYUv8xupw9UEoVWJR7K5bkL+BtZK+ABR0msf6mGC3EGEev34tDHUews3kvrI4u\nAMDktAmYnTkD5WmTYm7Ck1haFwVBQJ+7P3hC1/lrbdvt1uHLnSSQIFuXieLkApQkF6HYWACjKrxn\ntV6s3+ZGTcsAWnodOFHdhSYRwzYWAAAenElEQVSrbXjWLiB4W8aJuSmYmJ+M8bnJI759YCK51nro\nD/hxoP1LfFS/AwOeIWjlGiwrWIgF2XNi7vctkljQYRJLb4rRTMxxDAgBnOw+g0+a9qB2oAFA8Hjm\nVFMZZmRMw/iU4pg4EzWa10WP34vmoVbUDzaifqAJ9QONGPAMDj+vkCpQYMgNbiEbC1BozIvYlpXX\n50dTpw0N7UOoaxtATevAJTN2yaQSFGToUZJjREl2MsblGsN6Nm28u5H10OP3YHfzfnzc9CmcPheS\nVUasKFyGWRk3xeUJnCPFgg6TaH5TjCXRMo6ttnZ82XEUX1mPoc/dDwAwKPWYbqnADMs05OlzonaG\nsmgZQ0EQ0O3sReNgE+oHm1A/0IQWWxv852eiAoJjWmgMXupUbCxErj4Lcqk87FkCAQHtPXbUtw+h\nvn0Q9e2DaO68dOtYo5KjJMeIcTlG3FyaiRS1HEoFS2K0RrIe2r0O7Gjcjd0tn8Eb8CFLm4FvTVyD\nQmNehFNGNxZ0mETLm2Ksi7ZxvHB955cdR3C08wTsvuDMSWZNOsrTJmNCagmKjYVRdRctMcbwQhk3\nDbWc/2hF81DrJTeQkElkyNFnodCQh8Lz1yCnJiWH/Q8dj9eP1m47mjttaLIOoanThuZOG9yer/8w\nkMskyDXrUJhpGP7ISNMMn2UdbethLBrNGPa5+rG1fgc+b/8SEkiwMHceVhYthyqO5y24FhZ0mPAX\nOjyieRx9AR/O9J7Dlx1HUdl9Gt6AF0DwJgIFhjxMSCnBhJRiFBjzoYjAVuCNivQYuv0edNitaLNb\n0W7rQLOt7bIyBoInc+Xqs5FnyEGhIR+5+mwow3h8MSAI6Blwob3Hjpaurwu5o9eBi99pJBIgM02L\nwgw9CrOCZZxj0kEh540eIimUMazuq8VbVRvR6exGelIqvjVxDSakloQ5YfRjQYcJf6HDI1bG0eP3\nom6gAWf7anC2rwZNgy3DJzYppIrzt+grQJYuE1naDKSrU8fs+HW4xtDpc6Hb2YN2u/X8RwfabFb0\nuHov+7dmTTry9MH5qoOPWWE7duzzB9DZ50R7jx1t3Xa09zjQ1mNHR4/jkjOqgeCUmblmHfLMeuRa\ndMg165Cdrh3xrupYWQ+jWahj6PF7sa1+Bz5p2gMBAuZkzsQ9JSugUSTO2d5jWdDibVIQhZlSpsDE\n1HGYmDoOQPDSoJr+Opztq8G5vlpU9VWjqq96+N8rpApkai3I0mUgS5uBLF0GMjRmGJR60U6G8QZ8\nGHQPosfVi27nhY8edLt60ePshc1rv+x79AodxqeUBH+W8z9PpjYj5NmhXB4fOvuc6Op3orPfia6+\n4GNnnxO9g24E/uFve6VcioxUDbLStchM0yArXYdciw7pxqSEmgwknillCqwuuRPTzOV4s+pdHGg/\nhFM9Z/CNCfeiwlQqdry4wy1ouq54GcdBzxCah1rRZutAq60D7fYOdNitw7fqu0ACCXQKLQwqPQxK\nPYxKw/DnBqUeSpkCcqkccok8+CiVQyGVQS5VQC6VISAE4A344PV74Q0EPzR6Bbp7B+EJeOHyuTHk\nGcKQ1x589NiCH14bnD7XFbPLJTKkqlOQnpSGdHUqLFozsrQWZGozoFfqRjwW/kAAAzYPegfd6B1y\nBR8HXegdOv846MKgw3vF7zVqlTClqINlnHahjLVIi3ARx8t6KKZwjqE/4MeOpt34qP4T+AQ/bjJP\nwTcn3AuNQhOW149WcbUFvXfvXvzyl79EIBDA2rVr8fjjj0d6kURXZFDqUZo2EaVpE4e/5g/40eXs\nRpvdijZbOzod3RjwDGLQPYRuZw9abe0RzyWBBDqlFimqZOTr9dArdUhTpyI9KRXp6lSkq9NgVBmu\nuzve5w/A7vTC5vJhyO7BoMODAZsHA3YPBuxuDNq9GLC7MWD3YMjuvWwL+AK5TIpUgwq5Fj3MyWqY\nktUwp6iHP1cpeRY1ATKpDLcXLMZUUxnerHoXRzor0TjYgu+WP5xQt5KNpIhuQfv9fixfvhyvvPIK\nLBYL1qxZg+eeew4lJVc+sYBb0NEpkcfR5XNj0DOEQc8QBtyDGPLY4A144Qv44Av44BV88AX8w//t\nC/gglciglMkhlyqglCqgkMqRbNDB4wxAIZUjSaaCXhksYr1SB61CA6lECp8/AJfHD5fHB6fbD6fb\nd+mHJ/g1h9sHu9MbLGOnD3aXFzanFy6P/7o/j1IhhVGrhFGnQqpehVRD0tePhuCjXh3eWzqGSyKv\nh+ESqTEMCAFsq9+Bjxp2Qi6V4xvjV2NO1sywLycaxM0WdGVlJfLz85GbmwsAWLFiBXbu3HnVgiaK\nNklyFZLkKpg16fD5A3B7/fB4Lzye/9x3/vNAAB6/P/icLzD8/JDXjz6ZFIM29/mv+eHy9MHt7YbL\n44fbE/yei6//vVFKhRQ6tQKmZDV0agW0agV05z+SdUoYNEoYdUoYtEoYtUokKXnaCYWfVCLFyqLl\nKDDk4bXTf8WbVe+ibqAR949fHdarBBJNRH9brVYrMjK+nj/ZYrGgsrIykoskukxAEOBw+TDk8MDu\n8sHh+nqr1HHx4/mvu73BwnSdL063J/j5aAr0apRyKVRKGVQKGVINKqiUMiQpZFAp5VApZFCrZFCr\n5NCo5FCr5EhSyYY/Vyvl54tYntA3fqDoU5Y+CT+e8V/x0sk/4/P2L9E81IrHyh7mXbJGKar+nFar\nFdBqwzu5xNV2HdDIROM4Ot0+dPc7v/4YcKF/yIUBuweDtvPHXW3BY7GBEZar8nxJqpRy6DVKJKnk\nSFLKkKSUI0kpD5br+YL9x8fh5y987aLPk5TBmbBk0ujbhRwLonE9jDWRHkMT9PhV9v/Eq0ffwSe1\n+/Cbw7/DU7O+jRnZFRFd7lgaq/UwogVtsVjQ0dEx/N9WqxUWi+Wq/97p9PIYdBQSaxwDAQHdA060\n9zjQ0euAtc85fIZx76AbDrfvmt+vUcmh1yhQlGmAXqOAXqOANkkBTdLXW6ZqlRyaJPnw1mqwgGWQ\nhrlATWladHUNwea68pnRdH38fQ7dWI7hPfmrkKnMxF/Pvof/+9kfsTTvNqwqWh7z83nHzTHo8vJy\nNDQ0oLm5GRaLBVu3bsVvf/vbSC6SYpDPH0Bbtx0tXbZgGQ8XsgM+/+VbviqlDKl6FQqzDJed6GTU\nKoNFrFZALov+m2gQxbNbMm9Grj4bL554HTuadqPdbsWjZQ9CmaDThI5URAtaLpfjZz/7GR577DH4\n/X7cd999GDduXCQXSVEuIAiw9jrQcOEGCR2DaLLa4L3C7FM5Jh0y0zTISNUgM00LS6oGaQYV1Cp5\nVJ5lTESXy9Zl4n/OeAZ/OvkmTvacwe+OvojvVayDTqEVO1rU40QldF2hjKPXF0BN6wBON/SitnUA\njdYhON1fXw4klUiQbdKiMFOPfIseGWlaZKRqkKxTxlUJc10MHccwdGKOoS/gwxtn3sGX1qPI0Jjx\n9NTHkJKULEqWUMTNLm5KPIIgoLXLjlMNvTjV0Itzzf3weL/eOs5I1WBqiR4F5+9WlGfW8faBRAlA\nLpXjkcnfgF6pw67mffjXw3/AUxWPIkuXcf1vTlAsaAqZw+XF8ZoenKzvxemGXgzYv94LkpWuxeSC\nFJQWpGJcTjI0SVzliBKVVCLFfeNWwagy4P2arXjuyAZ8b8o6lCQXih0tKvHdkkbF7fXjeE03Dp62\n4kRdz/DJXAaNArdMtmByQSpKC1ORoo+eezITUXRYkrcAeoUOb1S9g/937EV8p/RBTOHNNi7DgqYb\n5vMHcLKuFwfPWHGsuhtub/BYcrZJi5kTzagoSUeOWcc7FxHRdc3KnA6dUoeXTryOF068jm9OvBdz\ns2aJHSuqsKDpuqoae/Hh7hocPts1fO2xKTkJsybnYOYkC3JMI7+bEhFRadoEPDPtCWyofBlvVW2E\n3ePAsoKFYseKGixouiKfP4CvznZix5ctqG8fBAAk65SYNyUXsyZbUJChj6uzrIlIHIXGPPzwpv+C\n3x97CZvqPoJMKsPivPlix4oKLGi6xJDDgz3H2rDrSAv6bR5IAMycnIFbp2RgUl5K2GfYIiKyaM14\n9qYn8NzhDXivZguUMgVuzZ4tdizRsaAJANDSZcMnXzXj81NWeH0BJCllWHJzDhZPz0HZeAuvPyWi\niEpXp+GZaY/j345swF/Pvg+FVIFbMm8WO5aoWNAJrsk6hI176nCirgdA8Njykum5mDclE2oVVw8i\nGjsZWjOemfY4/v3IH/HGmXegkCow3RI/N9kYKb4DJ6iufife31eHL05ZAQDjc5OxfGYuKorTuRub\niESTrcvE01Mfw++OvoBXT/8FSpkC5emTxY4lChZ0ghl0eLDlQAM+PdIKf0BAnkWHtbeVoLQwVexo\nREQAgHxDLp6s+A7+cOwlvHTiz/hexXpMSh0vdqwxx4JOEG6PHx9/2YSPDjbB5fHDlJyEe+cXY8Yk\nM69bJqKoU5JciCemrMOGylfwfOVreHrqYwk34xgLOs4FAgL2HG/Dps/qMWj3QK9R4L4FxVgwNYu3\nYySiqDYxdRy+W/Ywnj/xGjYcfxnfn/ZdFBjyxI41ZvgOHcfae+z4lzeP4M/bz8Lt8eOuuQX4lydm\nY/H0HJYzEcWEsvRJWF/6Lbj9Hvzh2J9gdXSJHWnMcAs6DvkDAWw/1IwP9tXD5w9gxkQzvrVkHIw6\nzotNRLHnJvMUuCe68UbVO/jj8Vfw329+GlqFRuxYEceCjjMtnTa8vO0MGjqGYNAq8fCy8Zg+wSx2\nLCKikMzOmgGrows7mnbjpZNv4OmKRyGTxvetalnQccLnD2Db543YfKAB/oCA2aUZ+OaScdCpFWJH\nIyIKi7uKb0enowvHu0/h7XMf4JsT7o3rKYdZ0HGgsWMIL287g+ZOG1L0KjyyfAIqStLFjkVEFFZS\niRSPTH4A/3ZkA/a3HUSG1oxFubeKHStiWNAxTBAE/P1QEzburkNAEDC/Igv3LyyBJon/W4koPiXJ\nVfjelHX4zVe/x3vVW2BWp6MsfZLYsSKCp/LGKJfHhw2bTuGdT2th0CrwwwemYt0dE1nORBT3UpKS\n8b0p6yCXyvDKqbfQZusQO1JEsKBjUEevA//n9cP4qqoT43OT8b/Wz0RpAWcCI6LEkW/IxcOTvgGX\n340/Vr6CIY9N7Ehhx4KOMUeru/CL175EW7cdS27OwX9/YCqMWqXYsYiIxtx0SwVWFC5Fj6sPL5x4\nHd6AT+xIYcWCjhEBQcAH++rw+40n4PcL+O7KyfjWkvGccISIEtodBUtws2Uq6gYa8FbVuxAEQexI\nYcMDljHA7vLixc2nUVnbg3RjEp6+txx5Fr3YsYiIRCeRSPDgxLXodvbiUMcR5Oqz4+bMbm5+RbmW\nLht+8epXqKztQVlhKn62bgbLmYjoIkqZAo+XPwK9QocParahcbBZ7EhhwYKOYjWtA/iXN46gs9+J\nlXPy8ezaCk48QkR0BUaVAetKv4mAEMDLJ9+E0+cUO1LIWNBR6lRDL37712Nwefz47srJuHd+MaTS\n+J0xh4goVBNTx2F5/kJ0u3rxVtXGmD8ezYKOQkfPdeE/3jkOfyCAp+4pw+yyDLEjERHFhDsLl6LY\nWIAjnZX4rO2g2HFCwoKOMp+f7MAf3j8JmVSKZ9dWYNp4k9iRiIhihkwqw/rSb0Gr0ODd6g/RamsX\nO9KosaCjyK4jLXhxy2kkKWX44QNTMZmTjxARjVhKUjIemfQN+AI+/OnkG3D53GJHGhUWdJTY+nkD\n3vj4HAwaBf7Ht6ahJNsodiQiophVlj4Ji3Pnw+rowl/Pvh+Tx6NZ0CITBAHv7q7Fxj11SDWo8OOH\npvMyKiKiMLir+HbkG3LxpfUIvug4LHacEWNBi0gQBLy1oxrbvmiEJUWNf3pwOjJSNWLHIiKKC3Kp\nHN8pfRBqeRL+dvZ9tNutYkcaERa0iN7fV4+dR1qQY9Lixw9NR5oxSexIRERxJV2digcnroUn4MXL\nJ9+Ex+8RO9INY0GLZNeRFmw50ABzsho/fGAab3hBRBQh08zlmJ89B232DrxXs1XsODeMBS2Cr6o6\n8eb5E8J+8I0KljMRUYTdW7ICmVoL9rV+jrO9NWLHuSEs6DF2tqkPL2w+BaVShmfvr4A5hceciYgi\nTSFT4OFJ90MqkeLNqndj4tIrFvQYau604XcbKyEIwNP3lKMgwyB2JCKihJFvyMWSvAXocfXiw7qP\nxI5zXSzoMdI94MRzfzsGp9uPR1dOQmkhJyEhIhprdxYsQYbGjD0tB1DdVyt2nGtiQY+BIYcHz719\nHAM2Dx5YVIJbJnNubSIiMShkCjw0aS0kkOCNqnej+qxuFnSEuT1+/Me7lejodeD2mXlYNjNP7EhE\nRAmt0JiPRXm3otvZgw/r/i52nKtiQUeQPxDAhk0nUdc2iNmlFqxZWCx2JCIiArCycDnMmnTsbt6P\n2v4GseNcEQs6gjbuqUNlbQ/KClOx/s5JkEp4P2ciomigPH9WNwC8ceZv8Pi9Iie6HAs6Qg6f7cLf\nDzbBkqLGk6vLIJdxqImIokmRsQALc+eh09mNLXXbxY5zGbZGBFh7HXh522koFVI8dW851Cq52JGI\niOgKVhUth0mdhl3N+1A30Ch2nEuwoMPM7fXjD++fgNPtx7eXT0SOSSd2JCIiugqlTImHhnd1vwNv\nFO3qZkGHkSAI+PP2s2jpsmPhtGzMLuPlVERE0a4kuRDzc+bA6ujE1vodYscZxoIOoz3H23DgZAcK\nM/V4YPE4seMQEdENurv4DqQlpWJn81602TrEjgOABR029e2DeGvHOWiT5HhydRkUcg4tEVGsUMmU\nuH/83QgIAfzt3AcQBEHsSCzocLA5vfjP90/C7xfw+F2lSDeqxY5EREQjVJY+CWVpk1DdX4cjncfF\njsOCDlVAEPDi5tPoGXThrnmFKC9KEzsSERGN0ppxd0EuleO9mq2i3/GKBR2iLQcacKIuOBnJqrkF\nYschIqIQmDRpWJq3AP3uAWxv3CVqFhZ0CE419GLTvnqkGVT47qrJnCmMiCgOLMtfiBRVMnY27YXV\n0SVaDhb0KDlcPry89QykUgmeXF0OvUYpdiQiIgoDpUyJNeNWwS/48c65TaKdMMaCHqW3d1Wjb8iN\nlXMKUJRlEDsOERGFUYWpDBNTxuFM7zlUdp8SJQMLehRO1vVgX2U7cs06rJidL3YcIiIKM4lEgrXj\n74ZMIsO71ZtFuZkGC3qEHC4fXvmoCjKpBI+umMSbYBARxakMrRmLcm9Fr6sPOxo/HfPlh9Quv/71\nr3H77bdj1apVeOqppzA4ODj83PPPP4+lS5di+fLl2LdvX8hBo8XFu7bzLHqx4xARUQTdXrAIRqUB\nHzftRrezZ0yXHVJBz507F1u2bMHmzZtRUFCA559/HgBQU1ODrVu3YuvWrXjppZfwz//8z/D7/WEJ\nLCbu2iYiSixJ8iTcW7ICvoAPG6u3jOmyQyroefPmQS4P3kpx6tSp6OgIzl+6c+dOrFixAkqlErm5\nucjPz0dlZWXoaUXEXdtERIlpumUqSpILUdl9CkfbT47ZcsN2o+KNGzfijjvuAABYrVZUVFQMP2ex\nWGC1Wq/7Gmq1AlqtKlyRAAAmU3h2Q//+b8fQN+TGN5dNwPSyrLC8ZiwJ1zgmMo5h6DiGoeMYjs73\nZj2I//Hxr/DKkb/huTv+F+RSWcSXed2CXrduHbq7uy/7+rPPPoslS5YAADZs2ACZTIa77rorpDBO\npxcOhyek17iYyaRHV9dQyK9zsq4HHx9sRK5Zh4UVmWF5zVgSrnFMZBzD0HEMQ8cxHD01DFicOx+7\nW/ejuaMLOoU2bK99tT+arlvQr7766jWff++997B79268+uqrkJyfSctisQzv7gaCW9QWi2UEcaMH\nd20TEREQvCXlwzNWY6gvfBuS1xJS2+zduxcvvfQSNmzYALX66zs4LVq0CFu3boXH40FzczMaGhow\nZcqUkMOK4W+fBs/aXjE7n2dtExElMIlEgiR5eA/DXktIx6B/8YtfwOPxYP369QCAiooK/PznP8e4\nceNwxx134M4774RMJsPPfvYzyGSR318fbifrerD3ePCs7ZVzCsSOQ0RECSSkgt6xY8dVn3vyySfx\n5JNPhvLyovJ4/Xh9+1nu2iYiIlGwda5i+6EmdA+4sHRGLndtExHRmGNBX0HvoAtbv2iEQavEKu7a\nJiIiEbCgr+Dd3bXweAO4b0ER1KqwXSpORER0w1jQ/6C6pR9fnLaiIEOPueWZYschIqIExYK+SEAQ\n8NYn1QCAby0dD+n567qJiIjGGgv6Ivsr29HYMYRbSi0oyTaKHYeIiBIYC/o8p9uHjXtqoVRIsWZB\nsdhxiIgowbGgz9t8oAGDDi9WzC5AqiFJ7DhERJTgWNAAOnod2PFlM9KNSVg+I1fsOERERCxoAHh7\nZzX8AQH3LyyBUhF7U5ISEVH8SfiCPlHXg+O1PZiYl4zpE0xixyEiIgKQ4AXt8wfw153VkEiAby4Z\nP3y7TCIiIrEldEHvOtKK9h4HbpuajVyzTuw4REREwxK2oG1OLzZ9Vg9tkhz3zC8SOw4REdElErag\ntx9qgtPtw8o5BdCpFWLHISIiukRCFvSQw4NPvmqBUavEwmnZYschIiK6TEIW9N8PNsHt9WPF7Hxe\nVkVERFEp4Qp6wO7BziMtSNGrsGBqlthxiIiIrijhCvqjLxrh8QawcnY+FHJuPRMRUXRKqILut7nx\n6dFWpBlUmDeFW89ERBS9Eqqgt33eCK8vgJVzCqCQJ9SPTkREMSZhWqp30IXdx9qQbkzC3PJMseMQ\nERFdU8IU9NYvGuHzB7BqbgHksoT5sYmIKEYlRFP1DLiw91gbzMlqzCnLEDsOERHRdSVEQW/9vAH+\ngIBVcwsgkybEj0xERDEu7tuqu9+JfZXtsKRqcEupRew4RERENyTuC3rzgeDW893ceiYiohgS143V\n3m3H/hMdyEzTYOYkbj0TEVHsiOuC/uuOswgIAu6eVwipVCJ2HCIiohsWtwVt7XNg9+FmZJu0uHmi\nWew4REREIxK3BT3k8EIikWDtbcWQSrj1TEREsUUudoBIKck2YuO/rERvr13sKERERCMWt1vQACDj\njGFERBSj2GBERERRiAVNREQUhVjQREREUYgFTUREFIVY0ERERFGIBU1ERBSFWNBERERRiAVNREQU\nhVjQREREUYgFTUREFIVY0ERERFFIIgiCIHYIIiIiuhS3oImIiKIQC5qIiCgKsaCJiIiiEAuaiIgo\nCrGgiYiIohALmoiIKArFfUH/+te/xu23345Vq1bhqaeewuDgoNiRYs5HH32EFStWYOLEiThx4oTY\ncWLK3r17sXz5cixduhQvvPCC2HFi0j/90z9h9uzZWLlypdhRYlZ7ezsefvhh3HnnnVixYgVee+01\nsSPFHLfbjTVr1uCuu+7CihUr8Lvf/S7yCxXi3L59+wSv1ysIgiD85je/EX7zm9+InCj21NTUCLW1\ntcJDDz0kVFZWih0nZvh8PmHx4sVCU1OT4Ha7hVWrVgnV1dVix4o5hw4dEk6ePCmsWLFC7Cgxy2q1\nCidPnhQEQRCGhoaEZcuWcV0coUAgINhsNkEQBMHj8Qhr1qwRjh49GtFlxv0W9Lx58yCXywEAU6dO\nRUdHh8iJYk9xcTGKiorEjhFzKisrkZ+fj9zcXCiVSqxYsQI7d+4UO1bMmTFjBoxGo9gxYprZbEZp\naSkAQKfToaioCFarVeRUsUUikUCr1QIAfD4ffD4fJBJJRJcZ9wV9sY0bN2L+/Plix6AEYbVakZGR\nMfzfFouFb4okupaWFpw5cwYVFRViR4k5fr8fd999N+bMmYM5c+ZEfAzlEX31MbJu3Tp0d3df9vVn\nn30WS5YsAQBs2LABMpkMd91111jHiwk3MoZEFNvsdjueeeYZ/OQnP4FOpxM7TsyRyWTYtGkTBgcH\n8dRTT+HcuXMYP358xJYXFwX96quvXvP59957D7t378arr74a8V0Ssep6Y0gjZ7FYLjmkYrVaYbFY\nRExEiczr9eKZZ57BqlWrsGzZMrHjxDSDwYBZs2Zh3759ES3ouN/FvXfvXrz00kvYsGED1Gq12HEo\ngZSXl6OhoQHNzc3weDzYunUrFi1aJHYsSkCCIOCnP/0pioqKsH79erHjxKTe3t7hq4BcLhcOHDgQ\n8XNz4v5uVkuXLoXH40FycjIAoKKiAj//+c9FThVbduzYgV/84hfo7e2FwWDApEmT8Kc//UnsWDFh\nz549+NWvfgW/34/77rsPTz75pNiRYs4PfvADHDp0CH19fUhLS8P3v/99rF27VuxYMeWrr77Cgw8+\niPHjx0MqDW6X/eAHP8CCBQtEThY7qqqq8OMf/xh+vx+CIOD222/H008/HdFlxn1BExERxaK438VN\nREQUi1jQREREUYgFTUREFIVY0ERERFGIBU1ERBSFWNBERERRiAVNREQUhVjQREREUej/AzmNsad9\nhz1XAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"PovIJN1Aagvn","colab_type":"code","outputId":"d21cfe3e-ba24-4a00-b911-7b602366e34e","executionInfo":{"status":"ok","timestamp":1551044034123,"user_tz":300,"elapsed":382,"user":{"displayName":"Saran Ahluwalia","photoUrl":"","userId":"09376436326309786117"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["print(p)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["-0.8x^4 + 2.3x^3 + 0.5x^2 + 1x^1 + 0.2x^0\n"],"name":"stdout"}]},{"metadata":{"id":"weh899yMqekc","colab_type":"code","outputId":"d02d1b5d-01cb-406a-f987-4e56d389ae1c","executionInfo":{"status":"ok","timestamp":1551649417046,"user_tz":300,"elapsed":2493,"user":{"displayName":"Mountain Chan","photoUrl":"","userId":"06751548981326338197"}},"colab":{"base_uri":"https://localhost:8080/","height":878}},"cell_type":"code","source":["#!/usr/bin/env python3\n","# -*- coding: utf-8 -*-\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","plt.rcParams['figure.figsize'] = [20, 15]\n","\n","def polynomial_fitted_y_values(x, w):\n","    x = [x ** j for j in np.arange(0, w.size)]\n","    wTx = w[:, np.newaxis].T.dot(x).T\n","    return wTx[:, 0]\n","\n","\n","def least_squares(M, x, t):\n","        \n","    x_domain = np.array([x ** j for j in np.arange(0, M + 1)])\n","    xOdd = x_domain.copy()\n","    index = []\n","    for i in range(x_domain.shape[0]):\n","      if i % 2 == 0:\n","        index.append(i)\n","    if M == 0:\n","        xOdd[i] = np.nan\n","    else:\n","      xOdd = np.delete(x_domain, index, 0)\n","    \n","    return np.linalg.solve(xOdd.dot(xOdd.T), xOdd.dot(t))\n","\n","def main():\n","  \n","    x = np.linspace(-10, 10, 10)\n","    \n","    t =  np.array([erf(xVal) for xVal in x])\n","    xs = np.linspace(-10, 10, 500)\n","    t_ideal = np.array([erf(xVal) for xVal in xs])\n","\n","    \n","    M = np.arange(0, 10).reshape(-1)\n","    fig_row = np.ceil(M.shape[0] / 2)\n","    fig_col = np.ceil(len(M) / fig_row)\n","    fig = plt.figure()\n","    for i, m in enumerate(M):\n","        index = []\n","        w = least_squares(m, x, t)\n","      \n","        # index for all the even coefficient\n","        index = np.arange(0, len(w))\n","        \n","        # padding w with zeor's in the even coeifficeint position\n","        w = np.insert(w, index, 0)   \n","        fig.add_subplot(fig_row, fig_col, i + 1)\n","        plt.plot(x, t, 'b.', label='Training data')\n","        plt.plot(xs, t_ideal, 'g-', label='f(x) = erf(x)')\n","        plt.plot(xs, polynomial_fitted_y_values(xs, w), 'r-', label='Polynomial Curve fitting')\n","        plt.legend()\n","        plt.title('M = {0}'.format(m))\n","        plt.xlim(-10, 10)\n","        plt.ylim(-6.5, 6.5)\n","\n","    plt.show()\n","\n","if __name__ == '__main__':\n","  main()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAABIYAAANdCAYAAADhsXdiAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzs3Xd8k+X6x/FPkjadaWmhZSOgpTJU\nhgxBcSJDxXUYKuIRleMAxIWKqLhQOU4ERQX3QsYPPQ5QEDwqICpLOVIRlD1a6Eh3kzy/P1pC00Hb\nNG1pn+/79cqL5pn3lXlx5X7u22IYhoGIiIiIiIiIiJiOta4bICIiIiIiIiIidUOFIRERERERERER\nk1JhSERERERERETEpFQYEhERERERERExKRWGRERERERERERMSoUhERERERERERGTUmFIRI4pMTGR\nCRMmlFr+wAMPkJiYWO3jv/XWWwwePJiBAwfywAMPkJ+fX+1jioiIiNR3NZ2DHTp0iOuvv54BAwZU\n+1giUr+pMCQiFUpKSiIzM9N7Pz8/n19//bXax92wYQPvvPMO8+bNY8mSJTidTt59991qH1dERESk\nIaipHCwtLY1Ro0bRoUOHah9LROo/FYZEpEK9e/fm66+/9t7//vvvOeWUU6p93CVLljBkyBCioqKw\nWCxceeWVLFmypNrHFREREWkIaioHs1gszJo1i/POO6/axxKR+i+orhsgIse/wYMHM2fOHC6//HIA\nPv/8cy677DIWLFhQatv8/HyGDh1aanmHDh2YMWOGz7K///7bJyFp3bo127dvD3DrRUREROqnmsrB\noqOjiY6OJjk5uWYaLiL1igpDIlKhXr16ce+993Lo0CHCw8NZv349Tz/9dJnb2u32Svf6ycnJwW63\ne++HhoaSk5MTkDaLiIiI1Hc1lYOJiBSnwpCIVMhms3HhhRfy5ZdfEhsby5lnnklQUPU/PsLCwnwG\nm87JySE8PLzaxxURERFpCGoqBxMRKU6fKiJSKUOGDOH5558nJiaGq6++utztqtKNuX379uzYscN7\nf8eOHZx00kmBa7SIiIhIPVcTOZiISHEqDIlIpXTr1o2DBw+SkpJCr169yt2uKt2YBw8ezPjx47n+\n+utp1KgR77zzDhdddFGgmiwiIiJS79VEDiYiUpwKQyJSKRaLhQEDBpCTk4PVGpgJDU855RTGjBnD\n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\nrVZjREREUlJSiIuL996/9dbbGTv2Oi66aCgtW7YCICQkFJfLhdvtxmazVfrYv/22iY0b17Np0wYA\n8vLyvNfQd+zYpYy2JNO9e0/v/YkT72HcuJsYN+4OHI7CL+D4+KYcOHCg6oGK+EE5mIiI1BTlYObl\nV2HohRde8P790ksv0bJlSyUkIiINxNS+jx/zl6WKBOIXG4vF4v07OzsLu91e4TXkyckHeeSRKT7L\nOnXqzK233u69HxQUzOjRYxgwYFCp/YODy/5KLN6W9PR0wsIidD271BnlYCIiDZdysPLbohysZlVr\nVjIREZFAa9KkCQcPHv3Sf+GFfzN16jSSk5P57bdfAcjLyyUoKMjnl6q4uHhmznzN51Y8IQHo1KkL\n33//LQCpqYd59dVZFbQljuTkwl+iXC4Xr7wyg1mzXuO7775l3769QGEyFB/ftPqBi4iIiNQh5WDm\nVe3C0Pjx47niiisC0RYRERG6devh7Wb8zTfLiIuLJyGhA+PG3c4LL/wbl8vFr79u4rTTulX52Oed\ndwFhYeHcfPMYJk26g1NP7XrM7bt3P52NGwvb8vHHH9Cv31nExzflX/+6jeefnw7Axo3r6NatR5Xb\nIlJdysFERCSQlIOZl8UwDKPizQLDrINBaSAs88av2M0ZO5g7/kDEPnnyPVxzzXV07lz6mvMj60eN\nuo5OncpeH0hjx/6Txx57iqZNm5W5/l//up5HH33Su97sz70cf8z6egS9H80aO5g7fsVuztjB3DmY\nnvvq5WC6lExERI47EyfezZw5r3gHJSxu1arviY9vWisJCcA999zPSy89V+a6hQs/5txzzy83YRER\nERGpT5SDmZN6DNUCVS/NG79iN2fsYO74zRw7mDt+9Rg6Ppn19Qh6P5o1djB3/IrdnLGDueM3c+yg\nHkMiIiIiIiIiIuInFYZERERERERERExKhSEREREREREREZNSYUhERERERERExKRUGBIRkTq3b99e\nBgzoz7hxYxk3bixjx/6Tb79dccztb7jh2lpp27vvvsVvv20qd/0//nEJ2dnZpZZ/8MG7jBlzDbfc\ncgO33DKGdet+rslmkpaWxqhRw5k9e6ZPm1euXA5AVlYma9euASqOSURERMxBOVj1NYQcLKiuGyAi\nIgLQps0JzJz5GgAZGelcf/019OlzBiEhoXXarmuv/WeV9/nqqyVs3LiO2bPfxG63s3PnDiZOvJW3\n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\nn7/jPf4zmsB7HI3x2t6Be40eL7FHRkKPHmUnWiIi0oD9dtWx8y/DgNzco4MhZ6QXm/2q+NTmzqPT\nmxcbLNk7BXpO2QWIYzGs1qOzWMW1Iv/IFOXFZrcqHBzZUXoq86goMq0OBv6jKUl/2kk40c3Sot4Y\nYRTe4Pj5HvZHdXOw+hC7cjARkeNDrRWG1qyB+PiGVRSCwg/7pUuzvbMNKL76xwwxioiIOe0c+zhR\nubsIuc/pM525NSPdO3CypaCMcVEqYNjt3kGPXc1bHB0I2Wfq8qIiTtHU5d4iUNF+1Z3KPBz48qs8\nkpIKGuT3txnyEzPEKCJSH9RaYah3b0hOrq2z1a6G/ktAQ48PzBGjiIiYT+vXHiy1zAiPwONw4Ilt\njNG2HYYjCk/RFOU+U5dHRXuLPSV77BwvU5k39O/vhh4fmCNGEZHjnaarFxEREWmofv6Zw+m5R6cy\nd0RBkNI/EREROUqZgYiIiEhD1aMH7uNgnBURERE5flnrugEiIiIiIiIiIlI3/Oox5HK5eOCBB9i5\ncydut5tJkyZx+umnB7ptIiIiIlJE+ZeIiIjUBL8KQ5988glhYWF8+OGHbN26lfvvv58FCxYEum0i\nIiIiUkT5l4iIiNQEvwpDQ4cO5eKLLwYgNjaWtLS0gDZKRERERHwp/xIREZGaYDEMw6jOAZ577jms\nVisTJ04MVJtERERE5BiUf4mIiEigVNhjaP78+cyfP99n2fjx4znrrLN4//332bx5M7Nnz67UyZJN\nOitGXJzDtLGDueNX7OaMHcwdv5ljB3PHHxfnqOsmNBjKvwLD7O9Hs8YO5o5fsZszdjB3/GaOHaqf\ng1VYGBo2bBjDhg0rtXz+/Pl88803vPzyywQHB1erESIiIiJylPIvERERqS1+jTG0a9cuPvroI957\n7z1CQkIC3SYRERERKUH5l4iIiNQEvwpD8+fPJy0tjbFjx3qXzZ07F7vdHrCGiYiIiMhRyr9ERESk\nJvhVGLrzzju58847A90WERERESmH8i8RERGpCda6boCIiIiIiIiIiNQNFYZERERERERERExKhSER\nEREREREREZNSYUhERERERERExKRUGBIRERERERERMSkVhkRERERERERETEqFIRERERERERERk1Jh\nSERERERERETEpFQYEhERERERERExKRWGRERERERERERMSoUhERERERERERGTUmFIRERERERERMSk\nVBgSERERERERETGpahWGUlJS6NmzJz/++GOg2iMiIiIix6D8S0RERAKpWoWh6dOn07p160C1RURE\nREQqoPxLREREAsnvwtDq1auJiIigQ4cOgWyPiIiIiJRD+ZeIiIgEmsUwDKOqO+Xn5zNmzBhefvll\npk2bxuWXX07v3r1ron0iIiIigvIvERERqRlBFW0wf/585s+f77Osf//+DBs2jKioqCqdLDnZWbXW\nNRBxcQ7Txg7mjl+xmzN2MHf8Zo4dzB1/XJyjrpvQYCj/Cgyzvx/NGjuYO37Fbs7Ywdzxmzl2qH4O\nVmFhaNiwYQwbNsxn2ciRI/F4PLz//vvs3LmTTZs28eKLL5KQkFCtxoiIiIiI8i8RERGpPRUWhsry\n0Ucfef++7777uPzyy5WUiIiIiNQg5V8iIiJSE6o1K5mIiIiIiIiIiNRffvUYKu6pp54KRDtERERE\npJKUf4mIiEigqMeQiIiIiIiIiIhJqTAkIiIiIiIiImJSKgyJiIiIiIiIiJiUCkMiIiIiIiIiIial\nwpCIiIiIiIiIiEmpMCQiIiIiIiIiYlIqDImIiIiIiIiImJQKQyIiIiIiIiIiJqXCkIiIiIiIiIiI\nSakwJCIiIiIiIiJiUioMiYiIiIiIiIiYlApDIiIiIiIiIiIm5XdhaO7cuVx66aVceeWVbNq0KZBt\nEhEREZEyKP8SERGRQAvyZ6etW7fy+eefs3DhQpKSkli+fDmnnnpqoNsmIiIiIkWUf4mIiEhN8Ksw\ntGLFCgYPHkxQUBCdO3emc+fOgW6XiIiIiBSj/EtERERqgl+Xku3Zs4d9+/Zxww03cN1117Fly5ZA\nt0tEREREilH+JSIiIjXBYhiGcawN5s+fz/z5832WpaSkcNZZZzF16lR++eUXnnzySRYuXFijDRUR\nERExC+VfIiIiUlsqLAyVZcaMGbRv356LL74YgD59+rBmzZoK90tOdla9hQ1AXJzDtLGDueNX7OaM\nHcwdv5ljB3PHHxfnqOsmNGjKv6rO7O9Hs8YO5o5fsZszdjB3/GaOHaqfg/l1KVn//v35/vvvAdi2\nbRvNmzevViNERERE5NiUf4mIiEhN8Gvw6a5du/Lf//6XESNGAPDQQw8FtFEiIiIi4kv5l4iIiNQE\nvwpDABMmTGDChAmBbIuIiIiIHIPyLxEREQk0v8YYEhERERERERGR+s+vMYZERERERERERKT+U2FI\nRERERERERMSkVBgSERERERERETEpFYZERERERERERExKhSEREREREREREZNSYUhERERERERExKRU\nGBIRERERERERMamgQB5s7dq13H777UybNo1zzz0XgC1btjB16lQAEhMTeeSRR3z2KSgo4L777mPv\n3r3YbDaefPJJWrduHchm1bpXXnmFVatWAeDxeEhJSWHp0qXe9bt37+aSSy6hS5cuAMTExDBjxow6\naWugLVq0iBdffJE2bdoA0LdvX2655RafbT799FPefvttrFYrw4cPZ9iwYXXR1IBzuVw88MAD7Ny5\nE7fbzaRJkzj99NN9tuncuTPdu3f33n/rrbew2Wy13dSAmzZtGhs3bsRisTB58mROPfVU77pVq1bx\n3HPPYbPZ6N+/P7fddlsdtjTwpk+fzi+//ILL5eJf//oXF154oXfdeeedR7NmzbzP8TPPPEPTpk3r\nqqkB9+OPP3L77beTkJAAQIcOHXjwwQe96xvycz9//nw+/fRT7/3ffvuN9evXe+831Pf6H3/8wa23\n3so///lPRo0axb59+5g0aRJut5u4uDj+/e9/Y7fbffY51ueDBI5yMHPnX6AczIw5mJnzLzBvDmbm\n/AuUg9VYDmYEyI4dO4ybb77ZuPXWW41vvvnGu3zUqFHGxo0bDcMwjDvvvNNYuXKlz36LFi0ypk6d\nahiGYXz33XfG7bffHqgmHRcWLVpkvP766z7Ldu3aZVx++eV11KKatXDhQuOpp54qd31WVpZx4YUX\nGhkZGUZOTo5x0UUXGampqbXYwpqzYMEC4+GHHzYMwzD++OMP48orryy1Ta9evWq5VTXvxx9/NMaO\nHWsYhmH8+eefxvDhw33WDx482Ni7d6/hdruNq666yti6dWtdNLNGrF692rjxxhsNwzCMw4cPG2ef\nfbbP+nPPPdfIzMysg5bVjjVr1hjjx48vd31Dfu6L+/HHH73fY0c0xPd6VlaWMWrUKGPKlCnGu+++\naxiGYdx3333GF198YRiGYTz77LPG+++/77NPRZ8PEhjKwUozW/5lGMrBzJaDmTn/Mgxz52DKv45S\nDha4HCxgl5LFxcUxc+ZMHA6Hd1l+fj579uzxVqbOPfdcVq9e7bPf6tWrGTBgAFD4y8a6desC1aQ6\n53K5+PDDDxk1alRdN+W4sXHjRk455RQcDgehoaF07969wTznQ4cO5f777wcgNjaWtLS0Om5R7Vi9\nejUXXHABACeeeCLp6elkZmYCsGvXLqKjo2nevDlWq5Wzzz671GdAfdazZ09efPFFAKKiosjJycHt\ndtdxq44PDf25L27WrFnceuutdd2MGme323n99deJj4/3Lvvxxx85//zzgfK/48v7fJDAUQ7mS/lX\n2ZSDNSxmzr9AOVh5zPDcF6ccLHA5WMAKQ2FhYaW6aKWmphIVFeW937hxY5KTk322SUlJITY2trAx\nVisWi4X8/PxANatOffXVV5x55pmEhoaWWpeSksKECRMYOXKkT1e4hmDt2rXccMMNXHfddfzvf//z\nWVf8+YbCL++Sr4n6Kjg4mJCQEADefvttLr744lLb5Ofnc9dddzFy5EjefPPN2m5ijUhJSSEmJsZ7\nv/hzmpyc3GCfbwCbzUZ4eDgACxYsoH///qU+Bx9++GGuuuoqnnnmGQzDqItm1qg///yTm2++mauu\nuooffvjBu7yhP/dHbNq0iebNmxMXF+ezvCG+14OCgkp9n+Xk5Hi7LZf3HV/e54MEjnIwX2bNv0A5\nGJgnBzNz/gXKwcyef4FysEDnYH6NMTR//nzmz5/vs2z8+PGcddZZx9yvMm/I+vamPdZjsXDhwlLX\n8wM0atSI22+/naFDh+J0Ohk2bBh9+vTxqQDWB2XFftFFFzF+/HjOOecc1q9fz7333st//vOfco9R\n357vI471vL///vts3ryZ2bNnl9pv0qRJDB06FIvFwqhRozj99NM55ZRTaqvZtaK+PqfVsWzZMhYs\nWMAbb7zhs3zChAmcddZZREdHc9ttt7F06VIGDRpUR60MvLZt2zJu3DgGDx7Mrl27GD16NF999VWp\n65sbsgULFnD55ZeXWm6G93pJDfE7/nikHKyQmfMvUA6mHKy0+vp8VpcZczDlX4WUgx0ViO94vwpD\nw4YNq9RgdSW7ch44cKDUl298fDzJycmcfPLJFBQUYBhGvXpRl/dYZGdns3//flq1alVqXWRkJFde\neSVQ+Bh16dKF7du317vEpKLXQbdu3Th8+DBut9tbwY+PjyclJcW7zcGDB+natWuNtzXQyot9/vz5\nfPPNN7z88ssEBweXWn/VVVd5/+7Tpw9//PFHvf+gKus5PVK5L7murM+A+u67775j9uzZzJkzx+cy\nDoDLLrvM+3f//v35448/GkxSAtC0aVOGDBkCQJs2bWjSpAkHDhygdevWpnjuobAb75QpU0otb4jv\n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\nf4mIiEhnsJmmabb1pJtvvhmHw8GaNWsIh8Ncd911jBgxojPaJyIiIiIo/xIREZHO0WqPofnz5zN/\n/vyEbcXFxRxwwAHMnTuXL774ghtuuIGFCxe2+mRFRf72t7QHy831WjZ2sHb8it2asYO147dy7GDt\n+HNzvd3dhF5D+VdyWP3v0aqxg7XjV+zWjB2sHb+VY4eO52CtFoamTp3K1KlTE7Y9+OCD7Lbbbths\nNvbaay82bNjQoUaIiIiISD3lXyIiItJV2jUr2eTJk3n//fcB+PHHHykoKEhqo0REREQkkfIvERER\n6QztGnx63Lhx/Pe//+WUU04B4A9/+ENSGyUiIiIiiZR/iYiISGdoV2EI4JJLLuGSSy5JZltERERE\npAXKv0RERCTZ2jUrmYiIiIiIiIiI9HztGmNIRERERERERER6PhWGREREREREREQsSoUhERERERER\nERGLUmFIRERERERERMSiVBgSEREREREREbEoFYZERERERERERCzKmcwH+/TTT7n00ku5/fbbOfjg\ngwFYuXIls2fPBmD48OHccsstCeeEQiGuvfZaNm7ciMPh4I477mDgwIHJbFaXe+yxx/jwww8BMAyD\n4uJiFi9eHN+/fv16jj32WMaMGQNAdnY2Dz74YLe0NdkWLVrEAw88wKBBgwDYf//9ufDCCxOOeeWV\nV3jmmWew2+2cfPLJTJ06tTuamnThcJgbbriBtWvXEolEuOaaa9hrr70Sjhk9ejTjx4+Prz/99NM4\nHI6ubmrS3X777Sxbtgybzcb111/P2LFj4/s+/PBD7rvvPhwOB5MnT+biiy/uxpYm3913380XX3xB\nOBzm/PPP5/DDD4/vO+SQQ+jXr1/8Nb7nnnvIz8/vrqYm3SeffMKll17K0KFDARg2bBg33XRTfH9v\nfu3nz5/PK6+8El//5ptvWLp0aXy9t/6tf//991x00UX87ne/Y/r06WzatIlrrrmGSCRCbm4uf/7z\nn3G5XAnntPT+IMmjHMza+RcoB7NiDmbl/Ausm4NZOf8C5WCdloOZSbJmzRrzggsuMC+66CLzrbfe\nim+fPn26uWzZMtM0TfOKK64w33nnnYTzFi1aZM6ePds0TdN87733zEsvvTRZTdopLFq0yHziiScS\ntq1bt8484YQTuqlFnWvhwoXmnXfe2ez+QCBgHn744WZFRYUZDAbNX/3qV2ZpaWkXtrDzLFiwwLz5\n5ptN0zTN77//3jzxxBObHLPPPvt0cas63yeffGLOmDHDNE3T/OGHH8yTTz45Yf9RRx1lbty40YxE\nIuapp55qrl69ujua2Sk++ugj89xzzzVN0zS3bdtmHnjggQn7Dz74YLOysrIbWtY1Pv74Y3PWrFnN\n7u/Nr30/wbwwAAAgAElEQVRDn3zySfxzrE5v/FsPBALm9OnTzRtvvNH829/+ZpqmaV577bXmq6++\napqmad57773ms88+m3BOa+8PkhzKwZqyWv5lmsrBrJaDWTn/Mk1r52DKv+opB0teDpa0S8lyc3N5\n+OGH8Xq98W21tbVs2LAhXpk6+OCD+eijjxLO++ijj5gyZQoQ/Wbjyy+/TFaTul04HOa5555j+vTp\n3d2UncayZcvYfffd8Xq9uN1uxo8f32te8+OOO47rrrsOgJycHMrKyrq5RV3jo48+4rDDDgNgyJAh\nlJeXU1lZCcC6devIzMykoKAAu93OgQce2OQ9oCfbe++9eeCBBwDw+XwEg0EikUg3t2rn0Ntf+4Ye\neeQRLrroou5uRqdzuVw88cQT5OXlxbd98sknHHrooUDzn/HNvT9I8igHS6T8a/uUg/UuVs6/QDlY\nc6zw2jekHCx5OVjSCkNpaWlNumiVlpbi8/ni63369KGoqCjhmOLiYnJycqKNsdux2WzU1tYmq1nd\n6vXXX+eXv/wlbre7yb7i4mIuueQSpk2bltAVrjf49NNPOeecczjzzDP59ttvE/Y1fL0h+uHd+Hei\np0pJSSE1NRWAZ555hmOOOabJMbW1tVx55ZVMmzaNp556qqub2CmKi4vJzs6Orzd8TYuKinrt6w3g\ncDhIT08HYMGCBUyePLnJ++DNN9/Mqaeeyj333INpmt3RzE71ww8/cMEFF3DqqafywQcfxLf39te+\nzvLlyykoKCA3Nzdhe2/8W3c6nU0+z4LBYLzbcnOf8c29P0jyKAdLZNX8C5SDgXVyMCvnX6AczOr5\nFygHS3YO1q4xhubPn8/8+fMTts2aNYsDDjigxfN25A+yp/3RtvSzWLhwYZPr+QGysrK49NJLOe64\n4/D7/UydOpV99903oQLYE2wv9l/96lfMmjWLgw46iKVLl/L73/+ef/7zn80+Rk97veu09Lo/++yz\nrFixgjlz5jQ575prruG4447DZrMxffp09tprL3bfffeuanaX6KmvaUcsWbKEBQsW8OSTTyZsv+SS\nSzjggAPIzMzk4osvZvHixRx55JHd1MrkGzx4MDNnzuSoo45i3bp1nHHGGbz++utNrm/uzRYsWMAJ\nJ5zQZLsV/tYb642f8Tsj5WBRVs6/QDmYcrCmeurr2VFWzMGUf0UpB6uXjM/4dhWGpk6dukOD1TXu\nyrlly5YmH755eXkUFRUxYsQIQqEQpmn2qF/q5n4WVVVVbN68mQEDBjTZ5/F4OPHEE4Hoz2jMmDH8\n9NNPPS4xae33YM8992Tbtm1EIpF4BT8vL4/i4uL4MVu3bmXcuHGd3tZkay72+fPn89Zbb/Hoo4+S\nkpLSZP+pp54aX9533335/vvve/wb1fZe07rKfeN923sP6Onee+895syZw9y5cxMu4wD49a9/HV+e\nPHky33//fa9JSgDy8/M5+uijARg0aBB9+/Zly5YtDBw40BKvPUS78d54441NtvfGv/XtSU9Pp7q6\nGrfb3exnfHPvD9I+ysGirJx/gXIw5WDKv8C6OZjyryjlYMnNwTp1uvqUlBR22203Pv/8cyDatbfx\nN1qTJk3itddeA+Dtt99m4sSJndmkLrNy5Up222237e77+OOPueOOO4BoArNy5Up23XXXrmxep3ni\niSf417/+BURHTs/JyUno1rnHHnvw9ddfU1FRQSAQ4Msvv2wya0RPtW7dOp5//nkefvjheHfmhn76\n6SeuvPJKTNMkHA7z5ZdfxmcT6MkmTZoUn/VlxYoV5OXl4fF4ABgwYACVlZWsX7+ecDjM22+/zaRJ\nk7qzuUnl9/u5++67efzxx8nKymqy75xzzolflvHZZ5/1ite7oVdeeYV58+YB0a7LJSUl8Rk/evtr\nD9FkKyMjo8k/0r31b3179t9///jff3Of8c29P0jnsmoOZtX8C5SDWS0Hs3L+BdbOwayef4FyMEh+\nDpa06erfeecd5s2bx08//cSKFSv429/+xpNPPsn111/PH/7wBwzDYI899mD//fcH4MILL+Sxxx7j\n6KOP5sMPP+TUU0/F5XJx5513JqtJ3arx9Z0At912G2eccQZ77bUXL730EqeccgqRSIQZM2b0mukT\njz32WK6++mqef/55wuEwt912GwB/+ctf2Hvvvdlzzz258sorOeecc7DZbFx88cVNKvw91fz58ykr\nK2PGjBnxbfPmzePpp5+Ox96vXz9OOukk7HY7hxxySI+Ytnn48OEcccQRTab0veGGG1iwYAGrVq1i\n9OjRTJs2DZvNxs0338yiRYvwer1MmTKF2bNnc+WVVwJw9NFHN5uE33XXXSxevJi33nqr02NKlldf\nfZXS0lIuu+yy+LaJEycyfPhwpkyZwuTJkznllFNITU1l1KhRveabqjqHHHIIV111FW+++SahUIjZ\ns2fzr3/9q82vfU/V+H2+4ftcT/xbb80333zDXXfdxYYNG3A6nSxevJh77rmHa6+9lhdeeIHCwsL4\nN7SXX345d9xxB+PHj2/y/iDJpxysnlXzL1AOZsUc7Lzzzmt3/rVo0SJuu+22hB4E06dP7zGDtls5\nB7N6/gXKwTojB7OZVr0gVUR2yPDhwxk8eDALFy6MV5lra2s56aSTWLVqFatWrerwc6xcuZJZs2YR\niUR6VGFIREREpLN0Zg62aNEiPv30015REBaRjuvUS8lEpHeYOHEib7zxRnz9/fffT9q1uoZhMHv2\n7IRvfERERESkc3MwEZE6SbuUTER6r6OOOoq5c+fGR/7/97//za9//WsWLFjQ5Nja2lqOO+64JtuH\nDfv/7N15fB11vf/x15w9+3qydoM2LbRQSgstyGIF2RRF0UIvCmrFgloUvQqyiSiCwBXZLQoIikAp\n8EO9KghYuIjsFCqlLV3omqTZ17PknDPz+2NOszRJ0yYnSdN5Px+Pecw+8/2cJD2ffmbmO1N73QoN\n8NhjjzF16lSOOOKI1DdcREREZAwbzhxszZo1nH/++dTU1DBnzhyuuOKKA+bxQhHZNyoMiciA5s6d\ny+WXX059fT3p6emsXLmSm266qc9tfT5fZ2emA6mtreWhhx7i8ccfp7W1NZVNFhERERnzhisHmzRp\nEieffDKLFi3C7XZz+eWXc8MNN3R20C4izqLCkIgMyO12c+qpp/L3v/+d/Px8jj/+eDyeof/zceON\nN/Ltb3+bnJwcFYZEREREdjNcOdjs2bOZPXt25/xFF13EhRdeOOTjisjYpMKQiOyVT33qU/zqV78i\nLy+P8847r9/t9uU25hUrVvD6669z0003kUgkaG5u5rjjjmPFihW9Xj8pIiIi4kTDkYNVVVXh9/s7\n3+yUSCRSUnASkbFJf/0isleOPPJIampqqKurY+7cuf1uty+3Ma9cubJzevv27VxwwQV6K5mIiIhI\nN8ORgz366KNs2LCB22+/HZfLxR/+8Afmz5+fohaLyFijwpCI7BXDMDjllFMIh8O4XHqhoYiIiMhI\nGI4c7Jvf/CbXXXcdn/70pzEMg9mzZ3PZZZel5NgiMvYYlmVZo90IEREREREREREZebrsLyIiIiIi\nIiLiUCoMiYiIiIiIiIg4lApDIiIiIiIiIiIOpcKQiIiIiIiIiIhDjdhbyeLxBI2NoZE63X4lLy/d\nsbGDs+NX7M6MHZwdv5NjB2fHHwxmjXYTZDdOzr/A2X+PTo4dnB2/Yndm7ODs+J0cOww9BxuxO4Y8\nHvdInWq/4+TYwdnxK3bncnL8To4dFL/sX5z+++jk+J0cOzg7fsXuXE6O38mxp8KQCkN//vOf+exn\nP8vZZ5/Niy++mKImiYiIiEh/lH+JiIhIKg26MNTY2Mjdd9/NI488wtKlS3nhhRdS2S4RERER2Y3y\nLxEREUm1Qfcx9Oqrr3LssceSmZlJZmYmP/vZz1LZLhERERHZjfIvERERSTXDsixrMDv+5je/YdOm\nTTQ1NdHS0sIll1zCsccem+r2iYiIiEiS8i8RERFJtSG9laypqYm77rqLyspKLrjgAlasWIFhGP1u\nX1vbOpTTjVnBYJZjYwdnx6/YnRk7ODt+J8cOzo5fbyUbGcq/9p7T/x6dGjs4O37F7szYwdnxOzl2\nGMW3khUUFHDkkUfi8XiYMGECGRkZNDQ0DKkxIiIiItI/5V8iIiKSaoMuDB1//PG89tprmKZJY2Mj\noVCIvLy8VLZNRERERLpR/iUiIiKpNuhHyYqLiznttNM455xzALj66qtxuQZdZxIRERGRASj/EhER\nkVQbUh9DCxcuZOHChalqi4iIONSdd/6KdevW0NBQTyQSoaysnOzsHG644ZYB9/3b3/5CRkYmH//4\nJ/pcf/vtv2TBgoWUlZUPuZ1PPrmMpqYmvv71i/pcv2HDetra8sjMLBzyuUT6o/xLRERS5UDJwdau\nXUt7e5wJEyYO+VxONKTCkIiIOFdbG6xb52LaNJPMzKEd65JLvgfYCcamTRtZsuTSvd73U5/6zB7X\nf/e7/z2ktu2Ll176J/PmzeGww1QYEhERkeGhHKy35557jvHjJ6swNEgqDImIyD5ra4PTTktn/Xo3\nFRUJnn02NOTEpC/vvPMWjz32MKFQiCVLvsfKlW/z4osvYJomxx57HIsWLeb+++8lNzeXgw6azFNP\nPY5huNiy5SPmzz+ZRYsWs2TJYr7//ctYseIF2tvb2Lp1Czt2bOc73/lvjj32OB5++EGef/4flJWV\nE4/HWbjwS8yefVRnG9566w3uuOOX5OcXUFBQ2Lndz3/+E2prawiHwyxatJiSklL+9KeneOWVl/jB\nD65k+/ZtPPHEMtxuF5MmTebyy69K/QckIiIijqIcrO8c7LHHHiM7O4e8vDzlYIOgwpCIiOyzdetc\nrF/vBmD9ejfr1rmYM8cclnNt3LiBRx99Cp/Px8qVb3PPPffhcrk455yzOPfc83ps+8EHq3nkkScx\nTZMFCz7DokWLe6yvqdnJ//zPHbz22r/505+eZMaMw3jqqeU8+uiTtLe3s3Dh2Sxc+KUe+9x7711c\nc83PqKiYyg9+8B3KysppbW1h7txjOOOMM9mxYzvXXPMjHnjgYebNO5azzjqT6dMPY/36D/nlL+8k\nKyuLb3/7G2zcuIHJk6cMy2ckIiIizqAcrO8c7IQTTuCYY05UDjZIKgyJiMg+mzbNpKIi0Xm1atq0\n4UlIAKZMqcDn8wEQCARYsmQxbrebpqYmWlpadmvXIQQCgX6PNXPmLACKiopoa2tj+/ZtHHzwZPz+\nAH5/gEMPndFrn6qqKioqpgIwa9ZsotEoWVnZrFmzmj//+SkMw0VLS3Ov/bKzs7niCvsW6i1bPqK5\nuWlwH4CIiIhIknIw5WDDQYUhERHZZ5mZ8OyzoZQ9374nXq8XgOrqKpYt+yMPPPBH0tPTOf/8c3pt\n63a793is7usty8Ky6PFGJ8PovU/39ZZlAfDcc8/Q0tLC3XffR0tLCxdeeH6PfWKxGLfeejMPPvgI\nBQWFXHbZ3j+vLyIiItIf5WDKwYaD3m8qIiKDkpkJc+YMb0LSXVNTE3l5eaSnp7Nu3Vqqq6uJxWJD\nOmZpaSmbNm0kHo/T2NjI2rVrem1TWBhk69bNWJbFypVvd7altLQMl8vFSy/9s7MdhmGQSCQIhdpx\nu90UFBSyc2c1a9euIR6PD6mtIiIiIqAcTDlY6qkwJCIiY0JFxVTS0tL55jcX8cIL/+Css87ml7+8\naUjHzM8v4JRTTucb37iA22//H6ZPn9Hritfixd/i6qsv5/LLv0dRUTEA8+efxL///TLf/e43SUtL\no6ioiN/97rccccSRXH/99axf/yFHHz2PCy+8gN/97recd9753HHHrUpMREREZMwZCznYUUcdxW23\n3aIcbJAMa9c9WSOgtrZ1pE61XwkGsxwbOzg7fsXuzNjB2fGPtdj/9re/cMopp+N2u7nggoXceuud\nncnHYIy1+FMpGMwa7SZIH5z6+wj6e3Rq7ODs+BW7M2OHsRd/KnOwsRZ7qg01B1MfQyIi4mj19fUs\nXvwVvF4fp556+pCKQiIiIiKyd5SD7T9UGBIREUc7//yvcv75Xx3tZoiIiIg4inKw/Yf6GBIRERER\nERERcSgVhkREREREREREHEqFIRERERERERERhxpSYSgSifDJT36Sp556KlXtEREREZEBKAcTERGR\nVBlSYejXv/41OTk5qWqLiIg4VDwe5xvf+ArXX38tALW1NVx66beIxWK9tn3llZe5/fZfDltbmpqa\n+PKXz2Hp0rsAWL/+Q6666od9bvvkk8t4/PFHhq0tIv1RDiYiIqmgHExgCIWhjRs3smHDBubPn5/C\n5oiIiBPV1dURi8W4+urrALj99v/h61+/CK/X22vb4447gerqStasWT0sbdm8eRPjx4/n4ouXAPA/\n/3Mjl1zy331ue/bZ5/D88/+gtrZmWNoi0hflYCIikirKwQSG8Lr6m266iWuuuYann356r/cJBrMG\ne7oxz8mxg7PjV+zONVbj/+E/fsjyD5an9JgLpi/gllNv6Xf9T396JZWV27n11hu45JJLqKmp5qST\njufNN9/k/vvvZ+nSpbz11lssXbqU++67j0WLvspTTz3BiSce03mMnTt38oMf/KDHcQ8//HAuu+yy\nzvlEIsE111zDtm3biMfjfOc73+HYY4/l/PPPp6KiAoB3332XyspKfv/73/Dxj3+ckpIiDj+8gqef\nfppVq1bx4x//mD/96U+8/fbb/PSnP+W88xby7LN/5nvf+17necbqz17Ghn3NwZz+++jk+J0cOzg7\nfsU+NikHG1oONpZ/9qNtUIWhp59+mlmzZjF+/Ph92q+2tnUwpxvzgsEsx8YOzo5fsTszdhjb8YfC\nHZimNej9XS6j1/6hcMceP49vfGMJW7Zs4/vfv5K///1/mT79cGprW5k06RACgQz+9rfnePDB+7ny\nymuprW1lwoQKXn/9jR7HdLnSufXWe3odu/s2zzzzVzIycrj11itoamriu9+9mIceeoyOjjilpeP5\n3Oe+yDvvvMVTTz3OBRcs5ne/+y2HHmq35bjjTmb58if517/e5P77f8dtt91DbW0rBx98KMuWPc6X\nv3whMLZ/9kOlhGz4DSYHc+rvI+jv0amxg7PjV+xjN3blYIPPwcb6z36ohpqDDaow9OKLL7Jt2zZe\n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\ncQVPPPFEqtsmIiIiIknKv0RERGQ4DKow9NnPfpYzzzwTgPz8fJqamlLaKBERERHpSfmXiIiIDAfD\nsqx+37K+N2699VZcLheXXnppqtokIiIiInug/EtERERSZcA7hpYvX87y5ct7LLvkkks44YQT+OMf\n/8jq1atZunTpXp2strZ1cK0c44LBLMfGDs6OX7E7M3ZwdvxOjh2cHX8wmDXaTThgKP9KDaf/PTo1\ndnB2/IrdmbGDs+N3cuww9BxswMLQggULWLBgQa/ly5cv55///Cf33HMPXq93SI0QERERkS7Kv0RE\nRGSkDKqPoW3btvHYY4/x8MMP4/f7U90mEREREdmN8i8REREZDoMqDC1fvpympiYWL17cuez+++/H\n5/OlrGEiIiIi0kX5l4iIiAyHQRWGvv/97/P9738/1W0RERERkX4o/xIREZHh4BrtBoiIiIiIiIiI\nyOhQYUhERERERERExKFUGBIRERERERERcSgVhkREREREREREHEqFIRERERERERERh1JhSERERERE\nRETEoVQYEhERERERERFxKBWGREREREREREQcSoUhERERERERERGHUmFIRERERERERMShVBgSERER\nEREREXEoFYZERERERERERBxqSIWhuro6jj76aF5//fVUtUdERERE9kD5l4iIiKTSkApDN998M+PH\nj09VW0RERERkAMq/REREJJUGXRh69dVXycjIYOrUqalsj4iIiIj0Q/mXiIiIpJphWZa1rzt1dHSw\naNEi7rnnHm644QY+//nPM2/evOFon4iIiIig/EtERESGh2egDZYvX87y5ct7LDvxxBNZsGAB2dnZ\n+3Sy2trWfWvdASIYzHJs7ODs+BW7M2MHZ8fv5NjB2fEHg1mj3YQDhvKv1HD636NTYwdnx6/YnRk7\nODt+J8cOQ8/BBiwMLViwgAULFvRYtnDhQkzT5I9//CNbt25l1apV3H777VRUVAypMSIiIiKi/EtE\nRERGzoCFob489thjndM/+tGP+PznP6+kRERERGQYKf8SERGR4TCkt5KJiIiIiIiIiMjYNag7hrr7\nxS9+kYp2iIiIiMheUv4lIiIiqaI7hkREREREREREHEqFIRERERERERERh1JhSERERERERETEoVQY\nEhERERERERFxKBWGREREREREREQcSoUhERERERERERGHUmFIRERERERERMShVBgSEREREREREXEo\nFYZERERERERERBxKhSEREREREREREYdSYUhERERERERExKFUGBIRERERERERcSgVhkRERERERERE\nHGrQhaH777+fs846iy984QusWrUqlW0SERERkT4o/xIREZFU8wxmp/Xr1/PXv/6VJ598knXr1vHC\nCy8wc+bMVLdNRERERJKUf4mIiMhwGFRhaMWKFZxxxhl4PB5mzJjBjBkzUt0uEREREelG+ZeIiIgM\nB8OyLGtfd7r22mtxu91s2bKFeDzOFVdcwSGHHDIc7RMRERERlH+JiIjI8BjwjqHly5ezfPnyHsvq\n6uo44YQTuO+++3j77be56qqrePLJJwc8WW1t6+BbOoYFg1mOjR2cHb9id2bs4Oz4nRw7ODv+YDBr\ntJtwwFD+lRpO/3t0auzg7PgVuzNjB2fH7+TYYeg52ICFoQULFrBgwYIey+644w4OPvhgDMPgqKOO\nYseOHUNqhIiIiIh0Uf4lIiIiI2VQbyU78cQT+de//gXAxo0bKS0tTWmjRERERKQn5V8iIiIyHAbV\n+fSsWbP4v//7P84991wAfvzjH6e0USIiIiLSk/IvERERGQ6D6nxaRERERERERETGvkE9SiYiIiIi\nIiIiImOfCkMiIiIiIiIiIg6lwpCIiIiIiIiIiEOpMCQiIiIiIiIi8v/Zu+/4KOp9/+OvmdndJJve\nIRB6CE16xwIqir0dBc9RPKIHC2A5dg8e8ahwrMeCR1Rs12tBkZ9HjwVExWuhqCACQughEEp63d3s\nzszvjwlLQqjJJiGZz/Px2MfM7szsfj872d13vtNsSjqGhBBCCCGEEEIIIWxKOoaEEEIIIYQQQggh\nbEo6hoQQQgghhBBCCCFsyhHKJ1uxYgW33norM2fOZMyYMQBs2LCBGTNmAJCZmclDDz1Uaxm/38+9\n995Lbm4umqYxa9Ys0tPTQ9msJvfiiy/y448/AmAYBvn5+SxcuDA4fefOnVxwwQX06dMHgPj4eJ57\n7rlmaWuoLViwgGeffZYOHToAMHLkSG666aZa83z88ce8+eabqKrKFVdcweWXX94cTQ25QCDA3/72\nN3bs2IGu69x9990MHjy41jy9e/dm4MCBwftvvPEGmqY1dVNDbubMmaxevRpFUbj//vvp27dvcNqP\nP/7I008/jaZpnHrqqUyZMqUZWxp6jz/+OL/88guBQIAbbriBs846Kzjt9NNPp02bNsF1/OSTT5Ka\n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\nZ86s1oaKiIiImIXyLxEREakpRy0MleeVV16hRYsWXHrppQCcddZZLF269KjrpaXlHH8LTwIJCZGm\njR3MHb9iN2fsYO74zRw7mDv+hITI2m7CSU351/Ez++fRrLGDueNX7OaMHcwdv5ljh6rnYJU6lax3\n797873//A2Dr1q3Ur1+/So0QERERkSNT/iUiIiLVoVKDT3fs2JEff/yRIUOGAPDoo48GtVEiIiIi\nUpryLxEREakOlSoMAYwZM4YxY8YEsy0iIiIicgTKv0RERCTYKjXGkIiIiIiIiIiI1H2VGmNIRERE\nRERERETqPhWGRERERERERERMSoUhERERERERERGTUmFIRERERERERMSkVBgSERERERERETEpFYZE\nRERERERERExKhSEREREREREREZOyB3NjP//8M3feeSdPP/005513HgAbNmxg/PjxALRp04bHH3+8\n1Dput5v777+fXbt2YbPZmDBhAo0bNw5ms2rcG2+8weLFiwHw+Xykp6czd+7cwPwdO3Zw2WWX0b59\newBiY2N55ZVXaqWtwTZr1iwmTpxIkyZNAOjZsye33XZbqWXmzJnD+++/j9VqZfDgwQwaNKg2mhp0\nHo+Hhx56iJSUFLxeL+PGjaNr166llmnXrh2dO3cOPH/vvfew2Ww13dSge/rpp1m9ejUWi4UHH3yQ\n008/PTBv8eLFvPTSS9hsNnr37s0dd9xRiy0Nvueee47ly5fj8Xi49dZbueCCCwLz+vbtS3JycuA1\nfuGFF0hKSqqtpgbdsmXLuPPOO2nVqhUArVu35pFHHgnMP5lf++nTpzNnzpzA87Vr17Jy5crA85P1\ns75p0yZuv/12brzxRoYNG8bu3bsZN24cXq+XhIQEnn/+eZxOZ6l1jvT9IMGjHMzc+RcoBzNjDmbm\n/AvMm4OZOf8C5WDVloMZQbJt2zZj5MiRxu233258//33genDhg0zVq9ebRiGYdx9993GwoULS603\na9YsY/z48YZhGMZPP/1k3HnnncFq0glh1qxZxttvv11q2vbt240rr7yyllpUvWbOnGk888wzFc7P\ny8szLrjgAiM7O9soKCgwLrnkEiMjI6MGW1h9ZsyYYTz22GOGYRjGpk2bjKuvvrrMMmeeeWYNt6r6\nLVu2zBgxYoRhGIaxZcsWY/DgwaXmX3TRRcauXbsMr9drXHPNNcbmzZtro5nVYsmSJcbNN99sGIZh\n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\nExERCbZ69eqxd+/BwsvLLz/P+PFPk5aWxtq1vwFQVFSI3W4v1VsoISGRSZPeKnU7tCgE0LZte/73\nvx8AyMjYz5tvvnaUtiSQlubvDeTxeHjjjVd47bW3+OmnH9i9exfgL0glJiZVPXARERERkVpQ5cLQ\n6NGjueqqq4LRFhERETp16hI41ev77+eRkJBIq1atGTXqTl5++Xk8Hg+//baGM87odNzb7tu3H6Gh\nYYwcOZxx4+7i9NM7HnH5zp27snq1vy2ff/4JvXqdQ2JiErfeegf//vdzAKxevYJOnbocd1tEqko5\nmIiIiARDpa9KJiIiEiz16zdg6tQPAUhOrk9ycn3WrVtL37796Nu3HwBNmjRjypQPAJg1azrDht1w\n3Pux2+3cf/8jZaZPmvRW4HHnzl3p3LkrAGec0YnXXptIauoerr32+sAyXbp0o0sX/9hDX375BU88\nMeG42yIiIiIiciLQqWQiInLCGTv2n0yZ8kZgYOhDLV78PxITk2jbtuxg0dXh3nsf4NVXXyp33syZ\nn3PeeeeTlJRcI20REREREQk29RgSEZETTmJiEv/+d/nj//TseTY9e55dY21p1aoNTz75XLnzrr56\ncI21Q0RERESkOqjHkIiIiIiIiIiISakwJCIiIiIiIiJiUioMiYiIiIiIiIiYlApDIiIiIiIiIiIm\npcKQiIjUut27d9G/f29GjRrBqFEjGDHiRn74YcERl7/pputqpG0ffvgea9euqXD+3/52Gfn5+WWm\nf/LJhwwf/nduu+0mbrttOCtW/FqdzSQzM5NhwwYzefKkUm1euHA+AHl5ufz881Lg6DGJiIiIiHno\nqmQiInJCaNKkKZMmvQVAdnYW//jH3znrrB6EhLhqtV3XXXfjca/z7bffsHr1CiZPfhen00lKyjbG\njr2d9977lKioqOA3Evjrrz9o3LgxI0eOCkzbvXsX8+bNpU+f89m4cQM//7yUM888q1IxiYiIiMjJ\nSYUhERE54URFRRMfX499+/Zht9uZMOEJ3G43VquV++9/BIvFAsCSJYuYN+8bHnnkXwA8++yT9Op1\nDq+++m8uv/wqFi36ieLiYiZOfB2nM4TnnnuKXbt2UlxczM03j+TMM89i8ODLueyyK1m4cD6NGjWi\nTZvTWLBgHo0aNeGxx57kqafG06fP+XTs2InHH3+YgoICCgsLueuue2nbtn257Z8x4zMeeOBRnE4n\n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\n","text/plain":["<Figure size 1440x1080 with 10 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"_pvzdZZF5wlU","colab_type":"code","colab":{}},"cell_type":"code","source":["import symengine\n","\n","def z(t):\n","  z = 1/(1 - t)\n","  return z\n","\n","def c(c1, c2, c3, c4, c5):\n","  return lambda t: c1 + math.exp(-t**2)*(c2 + c3*z(t) + c4*z(t)**2 + c5 * z*(t)**3)\n","\n","def nonLinear_Least_Square (yTrue, yPred):\n","  residual = yTrue - yPred\n","  F = 1/2 * (np.linalg.norm(residual,2))**2\n","  "],"execution_count":0,"outputs":[]},{"metadata":{"id":"ajP8UD7qwtlb","colab_type":"code","outputId":"aa8978a4-9502-49fb-d770-3ba7a11e4d8f","executionInfo":{"status":"error","timestamp":1551653769145,"user_tz":300,"elapsed":1299,"user":{"displayName":"Mountain Chan","photoUrl":"","userId":"06751548981326338197"}},"colab":{"base_uri":"https://localhost:8080/","height":388}},"cell_type":"code","source":["# xdata = np.reshape(np.arange(0,1,0.1),(-1,1))\n","# ydata = 1+2*np.exp(0.75*xdata)\n","# fun = lambda c: (c[0]+c[1]*np.exp(c[2]*xdata) - ydata)**2\n","# Jfun = nda.Jacobian(fun, method='reverse')"],"execution_count":0,"outputs":[{"output_type":"error","ename":"SympifyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mSympifyError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-5d482aa2dd9e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mvars\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msymengine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msymbols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m't'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msymengine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msympify\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'c1 + math.exp(-t**2)*(c2 + c3*z(t) + c4*z(t)**2 + c5 * z*(t)**3'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mJ\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msymengine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvars\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32msymengine/lib/symengine_wrapper.pyx\u001b[0m in \u001b[0;36msymengine.lib.symengine_wrapper.sympify (/tmp/pip-c5cxx915-build/build/lib.linux-x86_64-3.6/symengine/lib/symengine_wrapper.cpp:14384)\u001b[0;34m()\u001b[0m\n","\u001b[0;32msymengine/lib/symengine_wrapper.pyx\u001b[0m in \u001b[0;36msymengine.lib.symengine_wrapper._sympify (/tmp/pip-c5cxx915-build/build/lib.linux-x86_64-3.6/symengine/lib/symengine_wrapper.cpp:15034)\u001b[0;34m()\u001b[0m\n","\u001b[0;32msymengine/lib/symengine_wrapper.pyx\u001b[0m in \u001b[0;36msymengine.lib.symengine_wrapper._sympify (/tmp/pip-c5cxx915-build/build/lib.linux-x86_64-3.6/symengine/lib/symengine_wrapper.cpp:15426)\u001b[0;34m()\u001b[0m\n","\u001b[0;32msymengine/lib/symengine_wrapper.pyx\u001b[0m in \u001b[0;36msymengine.lib.symengine_wrapper.sympy2symengine (/tmp/pip-c5cxx915-build/build/lib.linux-x86_64-3.6/symengine/lib/symengine_wrapper.cpp:14202)\u001b[0;34m()\u001b[0m\n","\u001b[0;31mSympifyError\u001b[0m: sympy2symengine: Cannot convert ''c1 + math.exp(-t**2)*(c2 + c3*z(t) + c4*z(t)**2 + c5 * z*(t)**3'' to a symengine type."]}]},{"metadata":{"id":"QsSbsCrUqUEb","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}